{"version":3,"file":"index.js","sources":["@flatbiz/utils/src/lang/is-empty.ts","@flatbiz/utils/src/array/array-field-to-label-value.ts","@flatbiz/utils/src/array/array-filter.ts","@flatbiz/utils/src/array/array-find.ts","@flatbiz/utils/src/array/array-find-index.ts","@flatbiz/utils/src/array/array-max.ts","@flatbiz/utils/src/array/array-min.ts","@flatbiz/utils/src/array/array-pick.ts","@flatbiz/utils/src/array/array-reorder.ts","@flatbiz/utils/src/object/clone-object.ts","@flatbiz/utils/src/string/uuid.ts","@flatbiz/utils/src/array/array-set-uid.ts","@flatbiz/utils/src/array/array-split.ts","@flatbiz/utils/src/array/array-to-map.ts","@flatbiz/utils/src/array/array-total.ts","@flatbiz/utils/src/array/generate-int-array.ts","@flatbiz/utils/src/array/is-array.ts","@flatbiz/utils/src/array/list-in-list.ts","@flatbiz/utils/src/array/random-sort.ts","@flatbiz/utils/src/array/to-array.ts","@flatbiz/utils/src/array/two-array-element-change.ts","@flatbiz/utils/src/date/date-normalize.ts","@flatbiz/utils/src/date/compare.ts","@flatbiz/utils/src/date/date-detail.ts","@flatbiz/utils/src/date/date-new.ts","@flatbiz/utils/src/date/is-date.ts","@flatbiz/utils/src/date/format.ts","@flatbiz/utils/src/date/index.ts","@flatbiz/utils/src/dom/find-parents-element.ts","@flatbiz/utils/src/dom/get-scroll-node.ts","@flatbiz/utils/src/dom/index.ts","@flatbiz/utils/src/image/base64-to-file.ts","@flatbiz/utils/src/image/file-to-base64.ts","@flatbiz/utils/src/image/image-compress.ts","@flatbiz/utils/src/noop/index.ts","@flatbiz/utils/src/number/is-number.ts","@flatbiz/utils/src/object/enum-values.ts","@flatbiz/utils/src/object/map-to-list.ts","@flatbiz/utils/src/object/object-get-object.ts","@flatbiz/utils/src/polyfill/array-at.ts","@flatbiz/utils/src/polyfill/object-is.ts","@flatbiz/utils/src/polyfill/index.ts","@flatbiz/utils/src/price/calculate.ts","@flatbiz/utils/src/price/fen2wan.ts","@flatbiz/utils/src/price/fen2yuan.ts","@flatbiz/utils/src/price/format.ts","@flatbiz/utils/src/price/remove-zero.ts","@flatbiz/utils/src/price/split.ts","@flatbiz/utils/src/price/wan2fen.ts","@flatbiz/utils/src/price/yuan2fen.ts","@flatbiz/utils/src/price/index.ts","@flatbiz/utils/src/props/attach-properties-to-component.ts","@flatbiz/utils/src/props/compose-props.ts","@flatbiz/utils/src/sleep/index.ts","@flatbiz/utils/src/string/trim.ts","@flatbiz/utils/src/string/cut-string.ts","@flatbiz/utils/src/string/format.ts","@flatbiz/utils/src/string/get-value-or-default.ts","@flatbiz/utils/src/string/json-string.ts","@flatbiz/utils/src/string/value-is-equal.ts","@flatbiz/utils/src/string/xml-validate.ts","@flatbiz/utils/src/system/cache.ts","@flatbiz/utils/src/system/env.ts","@flatbiz/utils/src/system/webview.ts","@flatbiz/utils/src/system/window.ts","@flatbiz/utils/src/table/merge-cell.ts","@flatbiz/utils/src/tree/tiled-array-to-tree.ts","@flatbiz/utils/src/tree/tree-field-change.ts","@flatbiz/utils/src/tree/tree-each-adaptive.ts","@flatbiz/utils/src/tree/tree-filter.ts","@flatbiz/utils/src/tree/tree-item-delete.ts","@flatbiz/utils/src/tree/tree-leaf-parents-array.ts","@flatbiz/utils/src/tree/tree-to-tiled-map.ts","@flatbiz/utils/src/tree/tree-node-parents-list.ts","@flatbiz/utils/src/tree/tree-to-array.ts","@flatbiz/utils/src/tree/tree-to-tiled-array.ts","@flatbiz/utils/src/uri/ensure-slash.ts","@flatbiz/utils/src/uri/to-link-path.ts","@flatbiz/utils/src/uri/url-join.ts","@flatbiz/utils/src/uri/get-module-url.ts","@flatbiz/utils/src/uri/is-http-url.ts","@flatbiz/utils/src/uri/path-compare.ts","@flatbiz/utils/src/uri/remove-slash.ts","@flatbiz/utils/src/uri/to-full-path.ts","@flatbiz/utils/src/uri/to-link-path-with-query.ts","@flatbiz/utils/src/uri/url-route.ts","@flatbiz/utils/src/validator/is-18idcard.ts","@flatbiz/utils/src/validator/regexp.ts"],"sourcesContent":["/**\n * 是否为空\n * ```\n * value === undefined || value === null;\n * ```\n */\nexport const isUndefinedOrNull = (value) => {\n  return value === undefined || value === null;\n};\n","import { extend } from '@dimjs/utils';\nimport { isUndefinedOrNull } from '../lang/is-empty.js';\nimport type { LabelValueItem, TPlainObject } from '../types/index.js';\n\n/**\n * 数组中的对象字段，转成label、value字段名对象，主要用于弹框中的数据源转换\n * @param dataList\n * @param fieldNames\n * @param isReserve 是否保留原字段，默认值：true\n * @returns\n * ```\n * 例如：[{ id: 1, name: '张三' }] => [{ id: 1, name: '张三', value: 1, label: '张三' }]\n * ```\n */\nexport const arrayField2LabelValue = (\n  dataList: TPlainObject[],\n  fieldNames?: { label?: string; value?: string },\n  isReserve?: boolean\n) => {\n  const dataListNew = dataList || [];\n  const fieldNamesNew = extend({ label: 'label', value: 'value' }, fieldNames);\n  const isReserveNew = isUndefinedOrNull(isReserve) ? true : isReserve;\n  return dataListNew.map((item) => {\n    let respData = {\n      label: item[fieldNamesNew.label],\n      value: item[fieldNamesNew.value],\n    } as TPlainObject;\n    if (isReserveNew) {\n      respData = extend({}, item, respData);\n    }\n    return respData;\n  }) as Array<LabelValueItem & { [key: string]: any }>;\n};\n","import type { TAny } from '../types/index.js';\n\n/**\n * array.filter严谨查询，使用 === 进行比较\n * @param array\n * @param targetValue\n * @param fieldName 如果数组元素是对象，则为查找对象元素key值\n * @returns\n * ```\n * 例如：\n * 1. arrayFilter([1,2,3], 2) => [2]\n * 2. arrayFilter([{ age: 1, name: 'zhansan' },{ age: 2, name: 'lisi' },{ age: 3, name: 'wangwu' }], 2, 'age') => [{ age: 2,name: 'lisi' }]\n * ```\n */\nexport const arrayFilter = (\n  dataList: TAny[],\n  targetValue: string | number | boolean | undefined | null,\n  fieldName?: string\n) => {\n  const dataListNew = dataList || [];\n  if (!fieldName) {\n    return dataListNew.filter((item) => {\n      return item === targetValue;\n    });\n  }\n  return dataListNew.filter((item) => {\n    return item?.[fieldName] === targetValue;\n  });\n};\n\n/**\n * array.filter不严谨查询，使用 == 进行比较\n * @param array\n * @param targetValue\n * @param fieldName 如果数组元素是对象，则为查找对象元素key值\n * ```\n * 例如：\n * 1. arrayFilterByLoosely([1,2,3], 2) => 2\n * 2. arrayFilterByLoosely([{ age: 1, name: 'zhansan' }], 1, 'age') => { age: 1, name: 'zhansan' }\n * 3. arrayFilterByLoosely([{ age: 1, name: 'zhansan' }], '1', 'age') => { age: 1, name: 'zhansan' }\n * ```\n */\nexport const arrayFilterByLoosely = (\n  dataList: TAny[],\n  targetValue: string | number | boolean | undefined | null,\n  fieldName?: string\n) => {\n  const dataListNew = dataList || [];\n  if (!fieldName) {\n    return dataListNew.filter((item) => {\n      return item == targetValue;\n    });\n  }\n  return dataListNew.filter((item) => {\n    return item?.[fieldName] == targetValue;\n  });\n};\n","import type { TAny } from '../types/index.js';\n\n/**\n * array.find严谨查询，使用 === 进行比较\n * @param array\n * @param targetValue\n * @param fieldName 如果数组元素是对象，则为查找对象元素key值\n * ```\n * 例如：\n * 1. arrayFind([1,2,3], 2) => 2\n * 2. arrayFind([{ age: 1, name: 'zhansan' }], 1, 'age') => { age: 1, name: 'zhansan' }\n * 3. arrayFind([{ age: 1, name: 'zhansan' }], '1', 'age', true) => { age: 1, name: 'zhansan' }\n * ```\n */\nexport const arrayFind = (\n  dataList: TAny[],\n  targetValue: string | number | boolean | undefined | null,\n  fieldName?: string\n) => {\n  const dataListNew = dataList || [];\n  if (!fieldName) {\n    return dataListNew.find((item) => {\n      return item === targetValue;\n    });\n  }\n  return dataListNew.find((item) => {\n    return item[fieldName] === targetValue;\n  });\n};\n\n/**\n * array.find不严谨查询，使用 == 进行比较\n * @param array\n * @param targetValue\n * @param fieldName 如果数组元素是对象，则为查找对象元素key值\n * ```\n * 例如：\n * 1. arrayFindByLoosely([1,2,3], 2) => 2\n * 2. arrayFindByLoosely([{ age: 1, name: 'zhansan' }], 1, 'age') => { age: 1, name: 'zhansan' }\n * 3. arrayFindByLoosely([{ age: 1, name: 'zhansan' }], '1', 'age') => { age: 1, name: 'zhansan' }\n * ```\n */\nexport const arrayFindByLoosely = (\n  dataList: TAny[],\n  targetValue: string | number | boolean | undefined | null,\n  fieldName?: string\n) => {\n  const dataListNew = dataList || [];\n  if (!fieldName) {\n    return dataListNew.find((item) => {\n      return item == targetValue;\n    });\n  }\n  return dataListNew.find((item) => {\n    return item[fieldName] == targetValue;\n  });\n};\n","import type { TAny } from '../types/index.js';\n\n/**\n * array.findIndex严谨查询，使用 === 进行比较\n * ```\n * 使用 === 进行比较\n * ```\n * @param array\n * @param targetValue\n * @param fieldName 如果数组元素是对象，则为查找对象元素key值\n * ```\n * 例如：\n * 1. arrayFindIndex([1,2,3], 2) => 2\n * 2. arrayFindIndex([{ age: 1, name: 'zhansan' }], 1, 'age') => { age: 1, name: 'zhansan' }\n * 3. arrayFindIndex([{ age: 1, name: 'zhansan' }], '1', 'age', true) => { age: 1, name: 'zhansan' }\n * ```\n */\nexport const arrayFindIndex = (\n  dataList: TAny[],\n  targetValue: string | number | boolean | undefined | null,\n  fieldName?: string\n) => {\n  const dataListNew = dataList || [];\n  if (!fieldName) {\n    return dataListNew.findIndex((item) => {\n      return item === targetValue;\n    });\n  }\n  return dataListNew.findIndex((item) => {\n    return item[fieldName] === targetValue;\n  });\n};\n\n/**\n * array.findIndex不严谨查询，使用 == 进行比较\n * @param array\n * @param targetValue\n * @param fieldName 如果数组元素是对象，则为查找对象元素key值\n * ```\n * 例如：\n * 1. arrayFindIndex([1,2,3], 2) => 2\n * 2. arrayFindIndex([{ age: 1, name: 'zhansan' }], 1, 'age') => { age: 1, name: 'zhansan' }\n * 3. arrayFindIndex([{ age: 1, name: 'zhansan' }], '1', 'age', true) => { age: 1, name: 'zhansan' }\n * ```\n */\nexport const arrayFindIndexByLoosely = (\n  dataList: TAny[],\n  targetValue: string | number | boolean | undefined | null,\n  fieldName?: string\n) => {\n  const dataListNew = dataList || [];\n  if (!fieldName) {\n    return dataListNew.findIndex((item) => {\n      return item == targetValue;\n    });\n  }\n  return dataListNew.findIndex((item) => {\n    return item[fieldName] == targetValue;\n  });\n};\n","import { isNumber, isPlainObject } from '@dimjs/lang';\nimport type { TPlainObject } from '../types/index.js';\n\n/**\n * 数组中指定数值字段最大值\n * @param array\n * @param fieldKey 数值字段，如果数组项为Object\n * @returns\n */\nexport const arrayMax = (\n  array: Array<TPlainObject | number>,\n  fieldKey?: string\n) => {\n  let max: number | undefined;\n  array.forEach((item) => {\n    let itemValue = item as number;\n    if (isPlainObject(item) && fieldKey && isNumber(item[fieldKey])) {\n      itemValue = item[fieldKey] as number;\n    }\n    if (!max) max = itemValue;\n    max = itemValue > max ? itemValue : max;\n  });\n  return max as number;\n};\n","import { isNumber, isPlainObject } from '@dimjs/lang';\nimport type { TPlainObject } from '../types/index.js';\n\n/**\n * 数组中指定数值字段最小值\n * @param array\n * @param fieldKey 数值字段，如果数组项为Object\n * @returns\n */\nexport const arrayMin = (\n  array: Array<TPlainObject | number>,\n  fieldKey?: string\n) => {\n  let min: number | undefined;\n  array.forEach((item) => {\n    let itemValue = item as number;\n    if (isPlainObject(item) && fieldKey && isNumber(item[fieldKey])) {\n      itemValue = item[fieldKey] as number;\n    }\n    if (!min) min = itemValue;\n    min = itemValue < min ? itemValue : min;\n  });\n  return min as number;\n};\n","import type { TAny } from '../types/index.js';\nimport { arrayFilter, arrayFilterByLoosely } from './array-filter.js';\n\n/**\n * 根据条件在大数组中 挑选 出目标数据，严谨查询，使用 === 进行比较\n * @param array 大数组\n * @param targetValue 待挑选数据\n * @param fieldName 如果数组元素是对象，则为查找对象元素key值\n * ```\n * 例如：\n * 1. arrayPick([1,2,3], 2) => 2\n * 2. arrayPick([{ age: 1, name: 'zhansan' }], 1, 'age') => [{ age: 1, name: 'zhansan' }]\n * 3. arrayPick([{ age: 1, name: 'zhansan' }], '1', 'age') => []\n * ```\n */\nexport const arrayPick = (\n  dataList: TAny[],\n  targetValue: Array<string | number | boolean>,\n  fieldName?: string\n) => {\n  const dataListNew = dataList || [];\n  let result = [] as TAny[];\n  targetValue.forEach((value) => {\n    const target = arrayFilter(dataListNew, value, fieldName);\n    if (target) {\n      result = result.concat(target);\n    }\n  });\n  return result;\n};\n\n/**\n * 根据条件在大数组中 挑选 出目标数据，不严谨查询，使用 == 进行比较\n * @param array 大数组\n * @param targetValue 待挑选数据\n * @param fieldName 如果数组元素是对象，则为查找对象元素key值\n * ```\n * 例如：\n * 1. arrayPickByLoosely([1,2,3], [2]) => [2]\n * 2. arrayPickByLoosely([{ age: 1, name: 'zhansan' }], [1], 'age') => [{ age: 1, name: 'zhansan' }]\n * 3. arrayPickByLoosely([{ age: 1, name: 'zhansan' }], ['1'], 'age') => [{ age: 1, name: 'zhansan' }]\n * ```\n */\nexport const arrayPickByLoosely = (\n  dataList: TAny[],\n  targetValue: Array<string | number | boolean>,\n  fieldName?: string\n) => {\n  const dataListNew = dataList || [];\n  let result = [] as TAny[];\n  targetValue.forEach((value) => {\n    const target = arrayFilterByLoosely(dataListNew, value, fieldName);\n    if (target) {\n      result = result.concat(target);\n    }\n  });\n  return result;\n};\n","import { arrayRemove } from '@dimjs/utils';\nimport type { TAny } from '../types/index.js';\n\n/**\n * 一维数组中两个元素交换位置\n * @param array\n * @param sourceIndex 来源索引\n * @param targetIndex 目标索引\n * ```\n * 1. sourceIndex、targetIndex超出array长度，数组不做任何处理\n * ```\n */\nexport const arrayReorder = (\n  array: TAny[],\n  sourceIndex: number,\n  targetIndex: number\n) => {\n  const result = Array.from(array);\n  if (sourceIndex > array.length - 1 || targetIndex > array.length - 1) {\n    console.warn('指定交换索引值超出数组长度');\n    return array;\n  }\n  //删除并记录 删除元素\n  const [removed] = result.splice(sourceIndex, 1);\n  //将原来的元素添加进数组\n  result.splice(targetIndex, 0, removed);\n  return result;\n};\n\n/**\n * 二维数组中的两个元素变更位置\n * @param arrays 二位数组\n * @param source 来源元素信息 index: 操作元素所有，parentIndex：操作元素的一维数组索引\n * @param target 目标元素信息 index: 操作元素所有，parentIndex：操作元素的一维数组索引\n * @returns\n */\nexport const arraysReorder = (\n  arrays: TAny[][],\n  source: { index: number; parentIndex: number },\n  target: { index: number; parentIndex: number }\n) => {\n  const sourceItems = arrays[source.parentIndex];\n  const sourceTarget = sourceItems[source.index];\n\n  const sourceItemsNew = arrayRemove(sourceItems, sourceTarget);\n\n  arrays[source.parentIndex] = sourceItemsNew;\n\n  const targetItems = arrays[target.parentIndex];\n  const newOverItems = [\n    ...targetItems.slice(0, target.index),\n    sourceTarget,\n    ...targetItems.slice(target.index, targetItems.length),\n  ];\n  arrays[target.parentIndex] = newOverItems;\n\n  return arrays;\n};\n","/**\n * 深拷贝对象，对象中只能存在 JSON 支持的类型\n * ```\n * 例如\n * 1. cloneObject({ x: 1 })\n * 2. cloneObject([{ x: 1 }])\n * ```\n */\nexport const cloneObject = <T extends object>(obj: T): T => {\n  return JSON.parse(JSON.stringify(obj)) as T;\n};\n","import { cache } from '@dimjs/utils';\n\nconst uuidFactory = (() => {\n  const now = `${Date.now()}`;\n  return cache(`uuid-${now.substring(now.length - 4, now.length)}-`, 100);\n})();\n\nexport const getUuid = () => {\n  return uuidFactory();\n};\n","import { cloneObject } from '../object/clone-object.js';\nimport { getUuid } from '../string/uuid.js';\nimport type { TPlainObject } from '../types/index.js';\n\n/**\n * 为数组添加uid唯一值字段\n * @param array 对象数组\n * @param options.uidKeyName uid字段名称，默认值：uid\n * @param options.returnNewArray 是否返回新数组，默认为false\n */\nexport const arraySetUid = (\n  array: TPlainObject[],\n  options?: {\n    /** uid字段名称 */\n    uidFieldName?: string;\n    /** 是否返回新数组 */\n    returnNewArray?: boolean;\n  }\n) => {\n  const uidFieldNameFt = options?.uidFieldName || 'uid';\n  const arrayFt = options?.returnNewArray ? cloneObject(array) : array;\n  arrayFt.forEach((item) => {\n    item[uidFieldNameFt] = getUuid();\n  });\n  return arrayFt;\n};\n","import type { TAny } from '../types/index.js';\n\n/**\n * 分割数组\n * @param array\n * @param length 分割长度\n * @returns\n */\nexport const arraySplit = (array: TAny[], length: number) => {\n  if (length <= 0) return [];\n  let index = 0;\n  const newArray: TAny[][] = [];\n  while (index < array.length) {\n    newArray.push(array.slice(index, (index += length)));\n  }\n  return newArray;\n};\n","import type { TPlainObject } from '../types/define.js';\n\n/**\n * 数组 转 键值对Map\n * ```\n * 例如：\n * [{ id: 1, name: '张三' }, { id: 2, name: '李四' }]\n * =>\n * { 1: { id: 1, name: '张三' }, 2: { id: 2, name: '李四' } }\n * ```\n */\nexport const arrayToMap = (dataList: TPlainObject[], uidName: string) => {\n  const result: TPlainObject = {};\n  dataList.forEach((item) => {\n    result[item[uidName]] = item;\n  });\n  return result;\n};\n","import { isNumber, isPlainObject } from '@dimjs/lang';\nimport type { TPlainObject } from '../types/index.js';\n\n/**\n * 数组字段求和\n * @param array\n * @param fieldKey 求和字段，如果数组项为Object\n * @returns\n */\nexport const arrayTotal = (\n  array: Array<TPlainObject | number>,\n  fieldKey?: string\n) => {\n  let total = 0;\n  array.forEach((item) => {\n    if (typeof item === 'number') {\n      total += item;\n    } else if (isPlainObject(item) && fieldKey && isNumber(item[fieldKey])) {\n      total += item[fieldKey];\n    }\n  });\n  return total;\n};\n","/**\n * 生成连续数字数组\n * @param from 连续数字起始值（包含）\n * @param to 连续数字结束值（不包含）\n * ```\n * generateIntArray(0, 5) => [0, 1, 2, 3, 4]\n * ```\n */\nexport function generateIntArray(from: number, to: number) {\n  const array: number[] = [];\n  for (let i = from; i < to; i++) {\n    array.push(i);\n  }\n  return array;\n}\n","import { isArray } from '@dimjs/lang';\n\n/**\n * 是否为非空数组\n * ```\n * 结果true满足\n * 1. 必须为数组\n * 2. 数组长度大于0\n * ```\n */\nexport const isNotEmptyArray = (value: any) =>\n  isArray(value) && value.length > 0;\n\n/**\n * 是否为空数组\n * ```\n * 结果true满足\n * 1. 必须为数组\n * 2. 数组为空\n * ```\n */\nexport const isEmptyArray = (value: any) =>\n  isArray(value) && value.length === 0;\n","import { isUndefinedOrNull } from '../lang/is-empty.js';\nimport type { TPlainObject } from '../types/index.js';\n\n/**\n * 通过规则字段 来源数组 并入 目标数组\n * @param sourceList 来源数组\n * @param targetList 目标数组\n * @param inRuleFieldName 匹配数组item相同的规则字段，默认值: value\n *\n * ```\n * listInList([{ value: 1, name: '张三', age: 100 }], [{ value: 1, age: 20, sex: 1 }], 'value')\n * =>\n * [{ value: 1, name: '张三', age: 20, sex: 1 }]\n * ```\n */\nexport const listInList = (\n  sourceList: TPlainObject[],\n  targetList: TPlainObject[],\n  inRuleFieldName = 'value'\n) => {\n  const resultList = targetList.map((item) => {\n    const target = sourceList.find(\n      (sourceItem) =>\n        !isUndefinedOrNull(item[inRuleFieldName]) &&\n        sourceItem[inRuleFieldName] === item[inRuleFieldName]\n    );\n    return { ...item, ...target };\n  });\n  return resultList as TPlainObject[];\n};\n","/**\n * 数组随机排序\n * @param array\n * @returns\n */\nexport const arrayRandomSort = <T>(array: T[]) => {\n  return array.sort(() => {\n    return Math.random() > 0.5 ? -1 : 1;\n  });\n};\n","import { isArray } from '@dimjs/lang';\nimport { isUndefinedOrNull } from '../lang/is-empty.js';\n\n/**\n * 转数组\n * @param array\n * @returns\n * ```\n * 例如\n * 1. undefined or null => []\n * 2. [1,2,3] => [1,2,3]\n * 2. 任意其他数据A => [A]\n * ```\n */\nexport const toArray = <T>(value?: unknown) => {\n  if (isUndefinedOrNull(value)) return [];\n  if (isArray(value)) return value as T[];\n  return [value] as T[];\n};\n","import type { TAny } from '../types/index.js';\n\n/**\n * 两个数组中元素变换\n * ```\n * 1. sourceIndex、targetIndex超出长度，数组不做任何处理\n * ```\n */\nexport const twoArrayElementPositionChange = (\n  sourceArray: TAny[],\n  targetArray: TAny[],\n  sourceIndex: number,\n  targetIndex: number\n) => {\n  if (!sourceArray[sourceIndex]) {\n    return {\n      sourceArray,\n      targetArray,\n    };\n  }\n  targetArray.splice(targetIndex, 0, sourceArray[sourceIndex]);\n  sourceArray.splice(sourceIndex, 1);\n  return {\n    sourceArray,\n    targetArray,\n  };\n};\n","import { dateNormalize as dateNormalizeNew } from '@dimjs/utils';\nimport type { DateType } from './types.js';\n/**\n * 指定数据转日期格式\n * @param dateInput\n * @returns\n */\nexport const dateNormalize = (dateInput: DateType) => {\n  if (!dateInput) {\n    throw new Error(`Invalid Date : \"${String(dateInput)}\"`);\n  }\n  return dateNormalizeNew(dateInput);\n};\n","import { dateNormalize } from './date-normalize.js';\nimport type { DateType } from './types.js';\n\n/**\n * 日期比较：大于等于\n */\nexport const dateTimeGte = (date1: DateType, date2: DateType) => {\n  const date1Fmt = dateNormalize(date1);\n  const date2Fmt = dateNormalize(date2);\n  return new Date(date1Fmt).getTime() >= new Date(date2Fmt).getTime();\n};\n\n/**\n * 日期比较：大于\n */\nexport const dateTimeGt = (date1: DateType, date2: DateType) => {\n  const date1Fmt = dateNormalize(date1);\n  const date2Fmt = dateNormalize(date2);\n  return new Date(date1Fmt).getTime() > new Date(date2Fmt).getTime();\n};\n\n/**\n * 日期比较：等于\n */\nexport const dateTimeEq = (date1: DateType, date2: DateType) => {\n  const date1Fmt = dateNormalize(date1);\n  const date2Fmt = dateNormalize(date2);\n  return new Date(date1Fmt).getTime() === new Date(date2Fmt).getTime();\n};\n\n/**\n * 判断目标日期是否在指定区间内，包含临界值\n * @param targetDate\n * @param minDate\n * @param maxDate\n * ```\n * 例如：targetDate >= minDate && targetDate <= maxDate\n * ```\n */\nexport const dateTimeIn = (\n  targetDate: DateType,\n  minDate: DateType,\n  maxDate: DateType\n) => {\n  return dateTimeGte(targetDate, minDate) && dateTimeGte(maxDate, targetDate);\n};\n","import { dateNormalize } from './date-normalize.js';\nimport type { DateType } from './types.js';\n\nconst weekConfig = {\n  1: '一',\n  2: '二',\n  3: '三',\n  4: '四',\n  5: '五',\n  6: '六',\n  7: '日',\n};\n\n/**\n * 日期解析\n * @param dateInput\n * @returns\n * ```\n * 1. 解析后月份 1～12\n * 2. 解析后星期 1～7\n * ```\n */\nexport const dateDetail = (dateInput: DateType) => {\n  const dateInstance = dateNormalize(dateInput);\n  const week = dateInstance.getDay();\n  const type7Week = week === 0 ? 7 : week;\n  return {\n    y: dateInstance.getFullYear(),\n    m: dateInstance.getMonth() + 1,\n    d: dateInstance.getDate(),\n    h: dateInstance.getHours(),\n    mi: dateInstance.getMinutes(),\n    s: dateInstance.getSeconds(),\n    ms: dateInstance.getMilliseconds(),\n    week: type7Week,\n    weekString: weekConfig[type7Week],\n    instance: dateInstance,\n  };\n};\n","import { dateNew as dateNewNew } from '@dimjs/utils';\nimport { dateNormalize } from './date-normalize.js';\nimport type { DateType } from './types.js';\n/**\n * 在日期【'y' | 'm' | 'd' | 'h' | 'mi' | 's'】中进行加减值处理\n * @param dateInput\n * @param mode 类型 'y' | 'm' | 'd' | 'h' | 'mi' | 's'\n * @param number\n * @returns\n */\nexport const dateNew = (\n  dateInput: DateType,\n  mode: 'y' | 'm' | 'd' | 'h' | 'mi' | 's',\n  number: number\n) => {\n  return dateNewNew(dateNormalize(dateInput), mode, number);\n};\n","import { dateNormalize } from './date-normalize.js';\nimport type { DateType } from './types.js';\n\n/**\n * 判断日期是否合法\n * @returns boolean\n */\nexport const isDate = (dateInput: DateType) => {\n  try {\n    return !!dateNormalize(dateInput);\n  } catch (_error) {\n    return false;\n  }\n};\n","import { dateFormat as dateFormatNew } from '@dimjs/utils';\nimport { dateNormalize } from './date-normalize.js';\nimport { isDate } from './is-date.js';\nimport type { DateFormatType, DateType } from './types.js';\n\nexport const dateFormat = (\n  dateInput: DateType,\n  format: DateFormatType = 'YYYY-MM-DD'\n) => {\n  if (!isDate(dateInput)) {\n    return `${dateInput || ''}`;\n  }\n  return dateFormatNew(dateNormalize(dateInput), format);\n};\n","import { dateTimeEq, dateTimeGt, dateTimeGte, dateTimeIn } from './compare.js';\nimport { dateDetail } from './date-detail.js';\nimport { dateNew } from './date-new.js';\nimport { dateNormalize } from './date-normalize.js';\nimport { dateFormat } from './format.js';\nimport { isDate } from './is-date.js';\n\nexport * from './types.js';\n\ntype FlatbizDate = {\n  /**\n   * 判断是否为合法日期\n   */\n  isDate: typeof isDate;\n  /**\n   * 日期格式化，默认格式：YYYY-MM-DD\n   */\n  format: typeof dateFormat;\n  /**\n   * 日期比较：大于等于\n   */\n  gte: typeof dateTimeGte;\n  /**\n   * 日期比较：大于\n   */\n  gt: typeof dateTimeGt;\n  /**\n   * 日期比较：等于\n   */\n  eq: typeof dateTimeEq;\n  /**\n   * 判断目标日期是否在指定区间内，包含临界值\n   * @param targetDate\n   * @param minDate\n   * @param maxDate\n   * ```\n   * 例如：targetDate e>= minDate && targetDate <= maxDate\n   * ```\n   */\n  in: typeof dateTimeIn;\n  /**\n   * 日期详情\n   * ```\n   * 1. 解析日期中的【'y' |'m' |'d' |'h' |'mi' |'s' |'ms' |'week'】数据\n   * 2. 解析后月份 1～12\n   * 3. 解析后星期 1～7\n   * ```\n   */\n  detail: typeof dateDetail;\n  /**\n   * 日期修改\n   * ```\n   * 对日期【'y' | 'm' | 'd' | 'h' | 'mi' | 's'】中进行加减值处理\n   * ```\n   */\n  update: typeof dateNew;\n  /**\n   * 指定数据转日期格式\n   */\n  dateNormalize: typeof dateNormalize;\n};\n\nexport const flatbizDate: FlatbizDate = {\n  isDate: isDate,\n  format: dateFormat,\n  gte: dateTimeGte,\n  gt: dateTimeGt,\n  eq: dateTimeEq,\n  detail: dateDetail,\n  update: dateNew,\n  in: dateTimeIn,\n  dateNormalize: dateNormalize,\n};\n","/**\n * 查找层层父节点中的目标元素\n * @param originNode  起始节点\n * @param verify 判断是否为目标节点\n */\nexport const findParentsElement = (\n  originNode: HTMLElement | null,\n  verify: (node: HTMLElement) => boolean\n) => {\n  while (originNode != null) {\n    if (verify(originNode)) {\n      return originNode;\n    }\n    originNode = originNode.parentNode as HTMLElement;\n  }\n  return null;\n};\n","type ScrollElement = HTMLElement | Window | Document;\n\nconst overflowScrollReg = /scroll|auto/i;\nconst defaultRoot = window;\n\nfunction isElement(node: Element) {\n  const ELEMENT_NODE_TYPE = 1;\n  return (\n    node.tagName !== 'HTML' &&\n    node.tagName !== 'BODY' &&\n    node.nodeType === ELEMENT_NODE_TYPE\n  );\n}\n\n/**\n * 查询指定节点层层父节点中第一个原生滚动节点\n * @param el\n * @param root\n * https://github.com/youzan/vant/issues/3823\n */\nexport function getScrollNode(\n  el: Element,\n  root: ScrollElement | null | undefined = defaultRoot\n) {\n  let node = el;\n\n  while (node && node !== root && isElement(node)) {\n    const { overflowY } = window.getComputedStyle(node);\n    if (overflowScrollReg.test(overflowY)) {\n      return node;\n    }\n    node = node.parentNode as Element;\n  }\n\n  return root;\n}\n","import { getUuid } from '../string/uuid.js';\nimport { findParentsElement } from './find-parents-element.js';\nimport { getScrollNode } from './get-scroll-node.js';\n\nexport interface BodyAppendDivElementProps {\n  divElement: HTMLDivElement;\n  elementId: string;\n}\n\nconst bodyAppendDivElement = (id?: string): BodyAppendDivElementProps => {\n  const div = document.createElement('div');\n  const idNew = id || `id_${Date.now()}`;\n  div.setAttribute('id', idNew);\n  document.body.append(div);\n  return {\n    divElement: div,\n    elementId: idNew,\n  };\n};\n\nconst createDivElement = (id?: string) => {\n  const div = document.createElement('div');\n  const idNew = id || `id_${getUuid()}`;\n  div.setAttribute('id', idNew);\n  return div;\n};\n\n// 删除body的子节点\nconst removeBodyChild = (element: string) => {\n  try {\n    document.body.removeChild(document.querySelector(element) as Node);\n  } catch (_error) {\n    //\n  }\n};\n\nexport const dom = {\n  bodyAppendDivElement,\n  createDivElement,\n  removeBodyChild,\n  /**\n   * 查询指定节点层层父节点中第一个原生滚动节点\n   * @param el\n   * @param root\n   * https://github.com/youzan/vant/issues/3823\n   */\n  getScrollNode,\n  /**\n   * 查找层层父节点中的目标元素\n   * @param originNode  起始节点\n   * @param verify 判断是否为目标节点\n   */\n  findParentsElement,\n};\n","export const base64ToFile = (dataurl, filename) => {\n  //将base64转换为文件\n  const arr = dataurl.split(',');\n  const mime = arr[0].match(/:(.*?);/)[1];\n  const bstr = atob(arr[1]);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, { type: mime });\n};\n","export const fileToBase64: (file: File) => Promise<string> = (file) => {\n  return new Promise((resolve, reject) => {\n    try {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function () {\n        const base64 = reader.result as string;\n        resolve(base64);\n      };\n      reader.onerror = function (error) {\n        reject(error);\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n","import { extend } from '@dimjs/utils';\nimport type { TAny } from '../types/index.js';\nimport { base64ToFile } from './base64-to-file.js';\nimport { fileToBase64 } from './file-to-base64.js';\n\nexport type TImageCompressOptions = {\n  /** 质量比例 0~1 */\n  quality?: number;\n  /** 图片宽高等比缩小 0~1 */\n  ratio?: number;\n  /**\n   * 压缩阀值（单位 MB）\n   * 小于阈值不压缩\n   */\n  threshold?: number;\n  /** 压缩后图片格式后缀，如果不设置，则根据图片原格式后缀 */\n  suffix?: 'jpg' | 'png';\n};\n\n/**\n * 图片压缩\n * ```\n * 只支持 jpg、jpeg、png\n * quality：默认值 0.5\n * ratio: 默认值 1\n * threshold: 默认值 1\n * ```\n */\nexport const imageCompressToBase64 = (\n  imageFile: File,\n  options?: TImageCompressOptions\n) => {\n  const optionsNew = extend({ quality: 0.5, ratio: 1, threshold: 1 }, options);\n\n  return new Promise<{ base64: string; imageName: string; suffix: string }>(\n    (resolve, reject) => {\n      const suffix = imageFile.name.substring(\n        imageFile.name.lastIndexOf('.') + 1,\n        imageFile.name.length\n      );\n      const imageName = imageFile.name.substring(\n        0,\n        imageFile.name.lastIndexOf('.')\n      );\n      const imageSuffix = options?.suffix || suffix;\n      const base64Suffix =\n        imageSuffix.toLocaleLowerCase() === 'jpg' ? 'jpeg' : imageSuffix;\n      const isLegal = ['png', 'jpg', 'jpeg'].includes(\n        base64Suffix.toLocaleLowerCase()\n      );\n      void fileToBase64(imageFile)\n        .then((imgBase64: string) => {\n          let needCompress = true;\n          if (!isLegal) {\n            console.info(`${suffix} 文件格式不支持压缩`);\n            needCompress = false;\n          }\n          const fileMb = imageFile.size / 1024 / 1024;\n          if (fileMb < optionsNew.threshold) {\n            needCompress = false;\n          }\n          if (!needCompress) {\n            resolve({\n              base64: imgBase64,\n              imageName,\n              suffix: base64Suffix,\n            });\n            return;\n          }\n          const imgage = new Image();\n          imgage.src = imgBase64;\n          imgage.onload = function () {\n            const that = this as TAny;\n            const width = that.width * optionsNew.ratio;\n            const height = that.height * optionsNew.ratio;\n            const canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n            const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n            ctx.drawImage(that, 0, 0, width, height);\n            const base64 = canvas.toDataURL(\n              `image/${base64Suffix}`,\n              optionsNew.quality\n            );\n            resolve({\n              base64,\n              imageName,\n              suffix: base64Suffix,\n            });\n          };\n        })\n        .catch(reject);\n    }\n  );\n};\n\n/**\n * 图片压缩\n * ```\n * 只支持 jpg、jpeg、png\n * quality：默认值 0.5\n * ratio: 默认值 1\n * threshold: 默认值 1\n * ```\n */\nexport const imageCompressToFormData = (\n  imageFile: File,\n  formDataKey: string,\n  options?: TImageCompressOptions\n) => {\n  return new Promise((resolve, reject) => {\n    const suffix = imageFile.name.split('.').at(-1) || '';\n    const isLegal = ['png', 'jpg', 'jpeg'].includes(suffix.toLocaleLowerCase());\n    if (!isLegal) {\n      console.info(`${suffix} 文件格式不支持压缩`);\n      const formData = new FormData();\n      formData.append(formDataKey, imageFile);\n      resolve(formData);\n      return;\n    }\n    void imageCompressToBase64(imageFile, options)\n      .then((compressInfo) => {\n        const { base64, imageName, suffix } = compressInfo;\n        const array = [] as number[];\n        const bytes = window.atob(base64.split(',')[1]);\n        for (let i = 0; i < bytes.length; i++) {\n          array.push(bytes.charCodeAt(i));\n        }\n        const blob = new Blob([new Uint8Array(array)], {\n          type: `image/${suffix}`,\n        });\n        const formData = new FormData();\n        formData.append(formDataKey, blob, `${imageName}.${suffix}`);\n        resolve(formData);\n      })\n      .catch(reject);\n  });\n};\n\n/**\n * 图片压缩\n * ```\n * 只支持 jpg、jpeg、png\n * quality：默认值 0.5\n * ratio: 默认值 1\n * threshold: 默认值 1\n * ```\n */\nexport const imageCompressToFile = (\n  imageFile: File,\n  options?: TImageCompressOptions\n) => {\n  const suffix = imageFile.name.split('.').at(-1) || '';\n  const isLegal = ['png', 'jpg', 'jpeg'].includes(suffix.toLocaleLowerCase());\n  if (!isLegal) {\n    console.info(`${suffix} 文件格式不支持压缩`);\n    return imageFile;\n  }\n  return new Promise<File>((resolve, reject) => {\n    void imageCompressToBase64(imageFile, options)\n      .then((compressInfo) => {\n        const { base64, imageName, suffix } = compressInfo;\n        const file = base64ToFile(base64, `${imageName}.${suffix}`);\n        resolve(file);\n      })\n      .catch(reject);\n  });\n};\n","export const noop = () => {\n  //\n};\n","/**\n * 判断是否为数字（包括字符串数字）\n * ```\n * isNumber(123) // true\n * isNumber('123') // true\n * isNumber('123a') // false\n * isNumber(undefined) // false\n * isNumber(null) // false\n * isNumber('') // false\n * ```\n */\nexport const isNumber = (num: string | number) => {\n  if (num === '' || num === undefined || num === null) {\n    return false;\n  }\n  return !isNaN(Number(num));\n};\n","/**\n * 获取枚举类型 value 数组\n * @param enumeration 枚举类型\n * @returns\n * ```\n * 例如：\n * enum AdminTypeEnum {\n *  superAdmin = 1,\n *  generalAdmin = 0,\n * }\n * =>\n * [1,0]\n * ```\n */\nexport const enumValues = <T extends object>(\n  enumeration: T\n): Array<T[keyof T]> => {\n  /**\n   * enum AdminTypeEnum {\n   *  superAdmin = 1,\n   *  generalAdmin = 0,\n   * }\n   * == Object.keys(AdminTypeEnum) ==>\n   * ['0', '1', 'superAdmin', 'generalAdmin']\n   */\n  const keys = Object.keys(enumeration).filter((k) => isNaN(Number(k)));\n\n  return keys.map((k) => enumeration[k]) as Array<T[keyof T]>;\n};\n","export type MapToListDefaultItem<V> = { label: string; value: V };\n\n/**\n * 对象转数组（精确）\n * @param mapData map对象\n * @param valueList value数组\n * @param labelName 自定义map key值属性名称，默认：value\n * @param valueName 自定义map value值属性名称，默认：label\n * @returns\n * ```\n * 由于map对象再获取key列表时，都是字符串类型数组，无法精确获取key类型，所以通过valueList来获取key的精确类型\n * const adminTypeMap = {\n *    1:'superAdmin',\n *    2:'generalAdmin',\n * }\n * mapToListExact<MapToListDefaultItem<number>>(adminTypeMap, [1,2])\n * =>\n * 默认值转出格式\n * [{ label: 'superAdmin', value: 1 },{ label: 'generalAdmin', value: 2 }]\n * ```\n */\nexport const mapToListExact = <T extends object>(\n  mapData: Record<string, unknown>,\n  valueList: Array<string | number>,\n  labelName = 'label',\n  valueName = 'value',\n  colorMap?: Record<string | number, string>\n) => {\n  const tempList: Array<any> = [];\n  valueList.map((value) => {\n    tempList.push({\n      [labelName]: mapData[value as string],\n      [valueName]: value,\n      color: colorMap?.[value],\n    });\n  });\n  return tempList as T[];\n};\n\n/**\n * 对象转数组（非精确转换，精确转换使用mapToListExact）\n * @param map 对象\n * @param labelName 自定义map key值属性名称，默认：value\n * @param valueName 自定义map value值属性名称，默认：label\n * @returns\n * ```\n * 例如\n * const adminType = {\n *    1:'superAdmin',\n *    2:'generalAdmin',\n * }\n * mapToListExact<MapToListDefaultItem<number>>(adminType, [1,2])\n * =>\n * 默认值转出格式\n * [{ label: 'superAdmin', value: '1' },{ label: 'generalAdmin', value: '2' }]\n * ```\n */\nexport const mapToList = <T extends object>(\n  map: Record<string, unknown>,\n  labelName = 'label',\n  valueName = 'value'\n) => {\n  const list: Array<any> = [];\n  Object.keys(map).forEach((key) => {\n    const obj = {\n      [labelName]: map[key],\n      [valueName]: key,\n    };\n    list.push(obj);\n  });\n  return list as T[];\n};\n","import type { TPlainObject } from '../types/index.js';\n\n/**\n * 从对象数据中，根据规则筛选对象\n * @param data\n * @param keyList\n * @returns\n *\n */\nexport const objectGetObject = (\n  objectData?: TPlainObject,\n  keyList?: Array<string | { beforeKey: string; afterKey: string }>\n) => {\n  if (!objectData || !keyList || !keyList.length) return {};\n  const result = {} as TPlainObject;\n\n  keyList.forEach((temp) => {\n    const targetKey = typeof temp === 'string' ? temp : temp.beforeKey;\n    const resultKey = typeof temp === 'string' ? temp : temp.afterKey;\n    const objectKeys = Object.keys(objectData);\n    if (objectKeys.includes(targetKey) && resultKey) {\n      result[resultKey] = objectData[targetKey];\n    }\n  });\n\n  return result;\n};\n","if (!Array.prototype.at) {\n  Object.defineProperty(Array.prototype, 'at', {\n    enumerable: false,\n    configurable: false,\n    writable: false,\n    value: function at(n) {\n      n = Math.trunc(n) || 0;\n      if (n < 0) n += this.length;\n      if (n < 0 || n >= this.length) return undefined;\n      return this[n];\n    },\n  });\n}\n","if (!Object.is) {\n  Object.is = function (x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  };\n}\n","import './array-at';\nimport './object-is';\n\nexport const polyfill = () => {\n  console.log('@flatbiz/utils polyfill');\n};\n","import type { PriceOption } from '@dimjs/utils';\nimport { extend, price } from '@dimjs/utils';\n\n/**\n * 金额计算：加\n */\nexport const add = (\n  amt: string | number,\n  amt2: string | number,\n  option?: PriceOption\n) => {\n  return price(amt, extend({ precision: 10 }, option)).add(amt2).value;\n};\n\n/**\n * 金额计算：减\n */\nexport const subtract = (\n  amt: string | number,\n  amt2: string | number,\n  option?: PriceOption\n) => {\n  return price(amt, extend({ precision: 10 }, option)).subtract(amt2).value;\n};\n\n/**\n * 金额计算：乘\n */\nexport const multiply = (\n  amt: string | number,\n  amt2: string | number,\n  option?: PriceOption\n) => {\n  return price(amt, extend({ precision: 10 }, option)).multiply(amt2).value;\n};\n\n/**\n * 金额计算：除\n */\nexport const divide = (\n  amt: string | number,\n  amt2: string | number,\n  option?: PriceOption\n) => {\n  return price(amt, extend({ precision: 10 }, option)).divide(amt2).value;\n};\n","import { price } from '@dimjs/utils';\nimport { isNumber } from '../number/is-number.js';\n\n/**\n * 金额转换 分 => 万元\n */\nexport const priceFen2wan = (\n  amt?: string | number,\n  defaultValue: string | number = 0\n) => {\n  if (amt === undefined || amt === null || !isNumber(amt)) {\n    if (!isNumber(defaultValue)) {\n      return defaultValue as string;\n    }\n    amt = defaultValue;\n  }\n  return price(amt).divide(1000000).value;\n};\n","import { price } from '@dimjs/utils';\nimport { isNumber } from '../number/is-number.js';\n\n/**\n * 金额转换 分 => 元\n */\nexport const priceFen2yuan = (\n  amt?: string | number,\n  defaultValue: string | number = 0\n) => {\n  if (amt === undefined || amt === null || !isNumber(amt)) {\n    if (!isNumber(defaultValue)) {\n      return defaultValue as string;\n    }\n    amt = defaultValue;\n  }\n  return price(amt).divide(100).value;\n};\n","import { price } from '@dimjs/utils';\nimport { isNumber } from '../number/is-number.js';\n\n/**\n * 格式化金额保留小数点后2位\n */\nexport const priceFormat = (\n  amt?: string | number,\n  defaultValue: string | number = 0,\n  options?: {\n    /** 是否显示分隔符，默认值：true */\n    separator?: boolean;\n    /** 小数点后位数，默认：2 */\n    precision?: number;\n  }\n) => {\n  if (amt === undefined || amt === null || !isNumber(amt)) {\n    if (!isNumber(defaultValue)) {\n      return defaultValue as string;\n    }\n    amt = defaultValue;\n  }\n  const separator = options?.separator === false ? '' : ',';\n  const precision = options?.precision ? options.precision : 2;\n  return price(amt, { precision, symbol: '', separator }).format();\n};\n","import { price } from '@dimjs/utils';\nimport { isNumber } from '../number/is-number.js';\n\n/**\n * 金额去除小数点尾号零（会四舍五入处理，默认添加分隔符）\n * ```\n * 例如：\n * 19.00 => 19\n * 19.90 => 19.9\n * 1999.90 => 1,999.9\n * 99.9999 => 100\n * ```\n */\nexport const priceRemoveTailZero = (\n  amt?: string | number,\n  defaultValue: string | number = 0,\n  options?: {\n    /** 是否显示分隔符，默认值：true */\n    separator: boolean;\n  }\n) => {\n  if (amt === undefined || amt === null || !isNumber(amt)) {\n    if (!isNumber(defaultValue)) {\n      return defaultValue as string;\n    }\n    amt = defaultValue;\n  }\n  amt = price(amt, { precision: 2, symbol: '', separator: '' }).format();\n  const priceFt = String(parseFloat(amt)).split('.');\n  const separator = options?.separator === false ? '' : ',';\n  const firstValue = price(priceFt[0], {\n    precision: 0,\n    symbol: '',\n    separator,\n  }).format();\n  return `${firstValue}${priceFt[1] ? `.${priceFt[1]}` : ''}`;\n};\n","import { price } from '@dimjs/utils';\nimport { isNumber } from '../number/is-number.js';\n\n/**\n * 金额分割（会四舍五入处理，默认添加分隔符）\n * ```\n * 例如：\n * 19.09 => ['19', '.09']\n * 99.00 => ['99', '.00']\n * 99.999 => ['100', '.00']\n * ```\n */\nexport const priceSplit = (\n  amt?: string | number,\n  defaultValue: string | number = 0,\n  options?: {\n    /** 是否显示分隔符，默认值：true */\n    separator?: boolean;\n    /** 小数点后位数，默认：2 */\n    precision?: number;\n  }\n): string[] => {\n  if (amt === undefined || amt === null || !isNumber(amt)) {\n    if (!isNumber(defaultValue)) {\n      return [defaultValue as string, ''];\n    }\n    amt = defaultValue;\n  }\n  const precision = options?.precision ? options.precision : 2;\n\n  const priceFt = price(amt, { precision, symbol: '', separator: '' })\n    .format()\n    .split('.');\n\n  const separator = options?.separator === false ? '' : ',';\n\n  const firstValue = price(priceFt[0], {\n    precision: 0,\n    symbol: '',\n    separator,\n  }).format();\n  return [firstValue, `.${priceFt[1]}`];\n};\n","import { price } from '@dimjs/utils';\nimport { isNumber } from '../number/is-number.js';\n\nexport const priceWan2fen = (\n  amt?: string | number,\n  defaultValue: string | number = 0\n) => {\n  if (amt === undefined || amt === null || !isNumber(amt)) {\n    if (!isNumber(defaultValue)) {\n      return defaultValue as string;\n    }\n    amt = defaultValue;\n  }\n  return price(amt).multiply(1000000).value;\n};\n","import { price } from '@dimjs/utils';\nimport { isNumber } from '../number/is-number.js';\n\nexport const priceYuan2fen = (\n  amt?: string | number,\n  defaultValue: string | number = 0\n) => {\n  if (amt === undefined || amt === null || !isNumber(amt)) {\n    if (!isNumber(defaultValue)) {\n      return defaultValue as string;\n    }\n    amt = defaultValue;\n  }\n  return price(amt).multiply(100).value;\n};\n","import { add, divide, multiply, subtract } from './calculate.js';\nimport { priceFen2wan } from './fen2wan.js';\nimport { priceFen2yuan } from './fen2yuan.js';\nimport { priceFormat } from './format.js';\nimport { priceRemoveTailZero } from './remove-zero.js';\nimport { priceSplit } from './split.js';\nimport { priceWan2fen } from './wan2fen.js';\nimport { priceYuan2fen } from './yuan2fen.js';\n\ntype FlatbizPrice = {\n  /**\n   * 金额转换 分 => 元\n   */\n  fen2yuan: typeof priceFen2yuan;\n  /**\n   * 金额转换  元 => 分\n   */\n  yuan2fen: typeof priceYuan2fen;\n  /**\n   * 金额转换 分 => 万\n   */\n  fen2wan: typeof priceFen2wan;\n  /**\n   * 金额转换  万 => 分\n   */\n  wan2fen: typeof priceWan2fen;\n  /**\n   * 金额小数点尾号去零\n   * ```\n   * 例如：\n   * 19.90 => 19.9\n   * 19.00 => 19\n   * ```\n   */\n  removeTailZero: typeof priceRemoveTailZero;\n  /**\n   * 格式化金额保留小数点后2位\n   */\n  format: typeof priceFormat;\n  /**\n   * 金额分割\n   * ```\n   * 例如：\n   * 19.09 => ['19', '.09']\n   * 99.00 => ['99', '.00']\n   * ```\n   */\n  split: typeof priceSplit;\n  /**\n   * 金额计算：加\n   */\n  add: typeof add;\n  /**\n   * 金额计算：减\n   */\n  subtract: typeof subtract;\n  /**\n   * 金额计算：乘\n   */\n  multiply: typeof multiply;\n  /**\n   * 金额计算：除\n   */\n  divide: typeof divide;\n};\n\nexport const flatbizPrice: FlatbizPrice = {\n  fen2yuan: priceFen2yuan,\n  fen2wan: priceFen2wan,\n  yuan2fen: priceYuan2fen,\n  wan2fen: priceWan2fen,\n  removeTailZero: priceRemoveTailZero,\n  format: priceFormat,\n  split: priceSplit,\n  add: add,\n  subtract: subtract,\n  multiply: multiply,\n  divide: divide,\n};\n","export function attachPropertiesToComponent<\n  C,\n  P extends Record<string, unknown>,\n>(component: C, properties: P): C & P {\n  const ret = component as Record<string, unknown>;\n  for (const key in properties) {\n    if (Object.prototype.hasOwnProperty.call(properties, key)) {\n      ret[key] = properties[key];\n    }\n  }\n  return ret as C & P;\n}\n","import { isUndefined } from '@dimjs/lang';\nimport type { TAny } from '../types/index.js';\n\n/**\n * 合并执行 originProps、patchProps中存在的相同命名函数，\n * @param originProps 原对象数据\n * @param patchProps 补丁对象数据\n * @param isMerge 是否浅合并对象，默认值：true\n * ```\n * 1. 主要用于 react 组件函数合并\n * ```\n */\nexport const composeProps = <\n  T extends Record<string, TAny>,\n  P extends Record<string, TAny>,\n>(\n  originProps: T,\n  patchProps: P,\n  isMerge?: boolean\n) => {\n  const isMergeNew = isUndefined(isMerge) ? true : isMerge;\n  const composedProps: Record<string, TAny> = {\n    ...originProps,\n    ...(isMergeNew ? patchProps : {}),\n  };\n\n  Object.keys(patchProps).forEach((key) => {\n    const func = patchProps[key];\n    if (typeof func === 'function') {\n      composedProps[key] = (...args: TAny[]) => {\n        func(...args);\n        return originProps[key]?.(...args);\n      };\n    }\n  });\n  return composedProps as T & P;\n};\n","/**\n * 延迟\n * @param time 毫米\n * @returns\n */\nexport const sleep = (time: number) =>\n  new Promise((resolve) => setTimeout(resolve, time));\n","import { isString } from '@dimjs/lang';\n\n/**\n * 清除空格，可清除前后空格或所有空格\n * @param str\n * @param cancelGlobal 取消所有，只清除前后空格\n */\nexport const trim = (str: string, cancelGlobal?: boolean): string => {\n  if (!str || !isString(str)) return str;\n  const patt = cancelGlobal ? /(^\\s+)|(\\s+$)/g : /\\s/g;\n  return str.replace(patt, '');\n};\n","import { trim } from './trim.js';\n\n/**\n * 获取字符串字节长度\n * @param str\n * @returns\n */\nexport const getStrByteLen = (str: string) => {\n  const c = str.match(/[^x00-xff]/gi);\n  return str.length + (c == null ? 0 : c.length);\n};\n\n/**\n * 根据字节长度截取字符串\n * @param str\n * @param bytes\n * @returns\n */\nexport const subStringByBytes = (str: string, bytes: number) => {\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    len += str.charCodeAt(i) > 255 ? 2 : 1;\n    if (len > bytes) {\n      return str.substring(0, i);\n    }\n  }\n  return str;\n};\n\n/**\n * 根据[字节长度]来截取字符串\n * @param str 待截取字符数据\n * @param len 截取字节长度\n * @param flow 溢出符，默认...\n */\nexport const cutString = (\n  str: string,\n  bytes: number,\n  flow?: string\n): string => {\n  str = trim(str || '', true);\n  if (!str) return '';\n  const cutStr = subStringByBytes(str, bytes);\n  if (str.length > cutStr.length) {\n    return `${cutStr}${flow || '...'}`;\n  }\n  return cutStr;\n};\n","import { isArray } from '@dimjs/lang';\nimport { trim } from './trim.js';\n\n/**\n * 字符串格式化\n * @param value 字符串\n * @param format 格式化间隙\n * @returns\n * ```\n * format('18512345678', [3, 4, 4]) => ['185', '1234', '5678']\n * format('18512345678', [3, 2]) => ['185', '12', '345678']\n * format('18512345678', [3, 20]) => ['185', '12345678']\n * format('18512345678', []) => ['18512345678']\n * ```\n */\nexport const stringFormat = (value: string, format: number[]) => {\n  try {\n    const newValue = trim(value || '');\n    if (!isArray(format) || format.length === 0) return [newValue];\n    const accumulation: { min: number; max: number }[] = [];\n    format.forEach((item, index) => {\n      if (index === 0) {\n        accumulation.push({ min: 0, max: item });\n      } else {\n        const preValue = accumulation[index - 1].max;\n        const currentValue = item + preValue;\n        accumulation.push({ min: preValue, max: currentValue });\n        if (index === format.length - 1 && currentValue < newValue.length) {\n          accumulation.push({ min: currentValue, max: newValue.length });\n        }\n      }\n    });\n    const strArray: string[] = [];\n    accumulation.forEach((item) => {\n      const temp = newValue.substring(item.min, item.max);\n      if (temp) {\n        strArray.push(temp);\n      }\n    });\n    return strArray;\n  } catch (error) {\n    console.error(error);\n  }\n  return [];\n};\n","import { isUndefinedOrNull } from '../lang/index.js';\nimport type { TAny } from '../types/index.js';\n\n/**\n * 获取 value，如果为undefined、null，则返回 defaultValue\n * ```\n * 1. getValueOrDefault(undefined, '-') => '-'\n * 2. getValueOrDefault(0, '-') => 0\n * ```\n */\nexport const getValueOrDefault = (value: TAny, defaultValue: TAny) => {\n  return isUndefinedOrNull(value) ? defaultValue : value;\n};\n","/**\n * json string 转 json 对象\n * ```\n * 非json字符串会抛异常\n * ```\n */\nexport const jsonStringToJsonObject = (jsonString: string) => {\n  try {\n    window['__json_string_transform'] = null;\n    let jsonValue = jsonString;\n    let count = 0;\n    while (typeof jsonValue != 'object') {\n      eval(`window.__json_string_transform=${jsonValue} `);\n      jsonValue = window['__json_string_transform'];\n      if (count === 10) {\n        throw new Error(`数据解析异常，【${jsonString}】`);\n      }\n      count++;\n    }\n    return jsonValue;\n  } catch (error: any) {\n    throw new Error(error?.message);\n  }\n};\n","import { isArray } from '@dimjs/lang';\nimport { isUndefinedOrNull } from '../lang/is-empty.js';\nimport type { TAny } from '../types/index.js';\n\n/**\n * 两个值比较，只用于string、number类型的值比较\n * @param firstValue string、number\n * @param secondValue string、number、Array<string | number>\n * @returns\n * ```\n * 1. 不用区分具体是string还是number\n * 2. secondValue为数组时，firstValue只要和数组中的任意值相等，即返回true\n * ```\n */\nexport const valueIsEqual = (\n  firstValue?: string | number | boolean,\n  secondValue?: string | number | boolean | Array<string | number | boolean>\n) => {\n  const newFirst = !isUndefinedOrNull(firstValue) ? String(firstValue) : null;\n  if (isArray(secondValue)) {\n    const newSecond = (secondValue as TAny[]).map((item) => {\n      return !isUndefinedOrNull(item) ? String(item) : null;\n    });\n    return newSecond.findIndex((item) => newFirst === item) >= 0;\n  } else {\n    const newSecond = !isUndefinedOrNull(secondValue)\n      ? String(secondValue)\n      : null;\n    return newFirst === newSecond;\n  }\n};\n","/**\n * 验证xml格式的正确性\n * ```\n *  result / true 验证通过\n *  result / false 验证不通过，message为失败描述\n * ```\n */\nexport const xmlValidate = (xmlContent: string) => {\n  // errorCode 0是xml正确，1是xml错误，2是无法验证\n  let errorCode = 0;\n  let errorMessage;\n  // code for IE\n  if (window['ActiveXObject']) {\n    const xmlDoc = new window['ActiveXObject']('Microsoft.XMLDOM');\n    xmlDoc.async = 'false';\n    xmlDoc.loadXML(xmlContent);\n\n    if (xmlDoc.parseError.errorCode != 0) {\n      errorMessage = `错误code: ${xmlDoc.parseError.errorCode} \\n`;\n      errorMessage = `${errorMessage} 错误原因: ${xmlDoc.parseError.reason} \\n`;\n      errorMessage = `${errorMessage} 错误位置: ${xmlDoc.parseError.line}`;\n      errorCode = 1;\n    } else {\n      errorMessage = '格式正确';\n    }\n  }\n  // code for Mozilla, Firefox, Opera, chrome, safari,etc.\n  else if (document.implementation['createDocument']) {\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlContent, 'text/xml');\n    const error = xmlDoc.getElementsByTagName('parsererror');\n    if (error.length > 0) {\n      if (xmlDoc.documentElement.nodeName == 'parsererror') {\n        errorCode = 1;\n        errorMessage = xmlDoc.documentElement.childNodes[0].nodeValue;\n      } else {\n        errorCode = 1;\n        errorMessage = xmlDoc.getElementsByTagName('parsererror')[0].innerHTML;\n      }\n    } else {\n      errorMessage = '格式正确';\n    }\n  } else {\n    errorCode = 2;\n    errorMessage = '浏览器不支持验证，无法验证xml正确性';\n  }\n  return {\n    message: errorMessage,\n    result: errorCode == 0 ? true : false,\n  };\n};\n","const storageKey = 'flatbiz';\n\nexport const localStorageCache = {\n  set: (key: string, value: Record<string, unknown>) => {\n    localStorage.setItem(`${storageKey}_${key}`, JSON.stringify(value));\n  },\n  get: (key: string) => {\n    try {\n      const value = localStorage.getItem(`${storageKey}_${key}`);\n      if (value) {\n        return JSON.parse(value) as Record<string, unknown>;\n      }\n    } catch (_error) {\n      //\n    }\n    return {} as Record<string, unknown>;\n  },\n  remove: (key: string) => {\n    localStorage.removeItem(`${storageKey}_${key}`);\n  },\n};\n\nexport const sessionStorageCache = {\n  set: (key: string, value: Record<string, unknown>) => {\n    sessionStorage.setItem(`${storageKey}_${key}`, JSON.stringify(value));\n  },\n  get: (key: string) => {\n    try {\n      const value = sessionStorage.getItem(`${storageKey}_${key}`);\n      if (value) {\n        return JSON.parse(value) as Record<string, unknown>;\n      }\n    } catch (_error) {\n      //\n    }\n    return {} as Record<string, unknown>;\n  },\n  remove: (key: string) => {\n    sessionStorage.removeItem(`${storageKey}_${key}`);\n  },\n};\n","import { getQueryString } from '@dimjs/utils';\n\nexport const isMockMeEnv = () => {\n  const env = getQueryString('env');\n\n  return env === 'me';\n};\n\nexport const isMockDevEnv = () => {\n  const env = getQueryString('env');\n  return env === 'dev';\n};\n\n/** 是否为mac系统（包含iphone手机） */\nexport const isMacEnv = () => {\n  return /macintosh|mac os x/i.test(navigator.userAgent);\n};\n\n/** 是否为windows系统 */\nexport const isWindowsEnv = () => {\n  return /windows|win32|win64/i.test(navigator.userAgent);\n};\n","/**\n * Mozilla/5.0 (Linux; Android 8.0.0; ALP-AL00 Build/HUAWEIALP-AL00; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/63.0.3239.111 Mobile Safari/537.36/TcFinancial/9.01.06\n * return webview userAgent string.\n */\nexport const userAgent = () => {\n  return typeof navigator !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n};\n\n/**\n * Check if device is iphone, ipad.\n * @param ua client webview userAgent\n */\nexport const isIphone = () => {\n  return /(iphone|ipad)/i.test(userAgent());\n};\n\nexport const isMac = () => {\n  return /macintosh/i.test(userAgent());\n};\n\nexport const isIphoneOrMac = () => {\n  return isMac() && isIphone();\n};\n\n/**\n * Check if device is android.\n * @param ua client webview userAgent\n */\nexport const isAndroid = () => {\n  return /(android)/i.test(userAgent());\n};\n\n/**\n * 判断当前是否是fabric webview, 拥有插件调用能力\n * Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1 Fabric@inhome/1.0.0 Fabric/NoWebview\n * Fabric容器标识 `Fabric@inhome/1.0.0`\n * Fabric容器下通过?ntv_history打开的多一个标识 `Fabric/DisableWebview`注意此标识必须在应用级注入禁用标识, 并且不能随意改变策略, 否则定会出现兼容性问题.\n * @param ua\n */\nexport const isFabricWebview = (ua = userAgent()) => {\n  const isFabric = new RegExp('fabric@', 'i').test(ua);\n  // 目前`Fabric/DisableWebview`强制禁用fabric 能力,即便处于 fabric 容器\n  // FIXME:目前 native 处理`Fabric/NoWebview`行为不一致, 所以此处 强制 always 配置 `Fabric/DisableWebview`\n  const isDisallowFabric = new RegExp('Fabric/DisableWebview', 'i').test(ua);\n  return isFabric && !isDisallowFabric;\n};\n","import { getUuid } from '../string/uuid.js';\nimport type { TPlainObject } from '../types/define.js';\n\nexport const getGlobalData = <T>() => {\n  return (window['GLOBAL'] || {}) as T;\n};\n\nexport const getWindow = <T>(key: string) => {\n  return window[key] as T;\n};\n\nexport const setWindow = (data: TPlainObject) => {\n  Object.keys(data).map((key) => {\n    window[key] = data[key];\n  });\n};\n\n/**\n * Web浏览器打开新窗口，替代window.open\n * ```\n * 直接使用window.open会被浏览器拦截\n * ```\n */\nexport const openNewWindow = (url: string) => {\n  const id = getUuid();\n  const aElement = document.createElement('a');\n  aElement.setAttribute('href', url);\n  aElement.setAttribute('target', '_blank');\n  aElement.setAttribute('id', id);\n  aElement.click();\n  setTimeout(() => {\n    aElement.parentNode?.removeChild(aElement);\n  }, 200);\n};\n","import { isArray, isNumber, isString } from '@dimjs/lang';\nimport { cloneObject } from '../object/clone-object.js';\nimport { flatbizPrice } from '../price/index.js';\nimport { valueIsEqual } from '../string/index.js';\nimport { type TAny, type TPlainObject } from '../types/index.js';\n\n/**\n * 表格合并单元格计算\n *```\n * 操作字段包括合并字段、统计字段\n * 1. 合并字段用于计算单元格合并的格数\n * 2. 统计字段用于统计数值（数字类型），必须依赖于合并字段\n *\n * 计算完成后会在数据中添加部分字段\n * 1. 设置mergeFields mergeKey数组后，会在每一条数据中添加 [mergeKey]RowSpan合并单元格数量字段\n * 2. 设置mergeFields statisticKey后，会在数据中添加 [mergeKey]RowTotal统计字段\n *\n * 写法1：不存在统计字段\n *  tableMergeCellCalculate([], ['key1', 'key2'])\n * 写法2：存在统计字段\n *  tableMergeCellCalculate([], [{ mergeKey: 'key1' }, { mergeKey: 'key2', statisticKey: 'key3' }])\n *\n * demo： https://fex.qa.tcshuke.com/docs/admin/main/table/cell-merge\n *\n *```\n */\nexport const tableMergeCellCalculate = (\n  /** 内部会对数据进行拷贝操作 */\n  dataSource: TPlainObject[],\n  mergeFields:\n    | string[]\n    | {\n        /** 合并字段 */\n        mergeKey: string;\n        /** 统计字段 */\n        statisticKey?: string;\n      }[],\n  /** 分页信息 */\n  pagination?: {\n    pageNo: number;\n    pageSize: number;\n  }\n) => {\n  if (!isArray(dataSource) || dataSource.length === 0) return [];\n  const pageNo = pagination?.pageNo;\n  const pageSize = pagination?.pageSize;\n  if (pageNo === undefined || pageSize === undefined) {\n    dataSource = cloneObject(dataSource);\n  } else {\n    dataSource = cloneObject(\n      dataSource.slice((pageNo - 1) * pageSize, pageNo * pageSize)\n    );\n  }\n  if (!isArray(mergeFields) || mergeFields.length === 0) return dataSource;\n\n  const mergeFieldsGroup = [] as string[][];\n  mergeFields.forEach((item, index) => {\n    const mergeKey = (isString(item) ? item : item.mergeKey) as string;\n    if (index === 0) {\n      mergeFieldsGroup.push([mergeKey]);\n    } else {\n      mergeFieldsGroup.push([...mergeFieldsGroup[index - 1], mergeKey]);\n    }\n  });\n\n  function theSameSort(originalData: TPlainObject[], fieldList: string[]) {\n    let newOriginalData = [] as TPlainObject[];\n    const fieldValueList = originalData.map((originalItem) => {\n      const originalValue = fieldList\n        .map((temp) => originalItem[temp])\n        .join('_');\n      return originalValue;\n    });\n    const newFieldValueList = Array.from(new Set(fieldValueList));\n\n    newFieldValueList.map((filedValue) => {\n      const tempList = originalData.filter((originalItem) => {\n        const originalValue = fieldList\n          .map((temp) => originalItem[temp])\n          .join('_');\n        return filedValue === originalValue;\n      });\n      newOriginalData = newOriginalData.concat(tempList);\n    });\n    return newOriginalData;\n  }\n\n  // 对数据源进行排序\n  let newDataSource = dataSource;\n  mergeFieldsGroup.forEach((fields) => {\n    newDataSource = theSameSort(newDataSource, fields);\n  });\n\n  const dataSourceValueGroup = [] as TPlainObject[][];\n  mergeFieldsGroup.forEach((fieldsGroupItem) => {\n    const fieldValueList = [] as TPlainObject[];\n    newDataSource.forEach((dataSourceItem) => {\n      let mergeValue = null as unknown as TPlainObject;\n      fieldsGroupItem.forEach((fieldItem) => {\n        if (!mergeValue) {\n          mergeValue = {\n            value: dataSourceItem[fieldItem],\n            fields: fieldsGroupItem,\n            // item: dataSourceItem,\n          };\n        } else {\n          mergeValue = {\n            value: `${mergeValue.value}_${dataSourceItem[fieldItem]}`,\n            fields: fieldsGroupItem,\n          };\n        }\n      });\n      fieldValueList.push(mergeValue);\n    });\n    dataSourceValueGroup.push(fieldValueList);\n  });\n  const newDataSourceValueGroup = [] as TPlainObject[][];\n  dataSourceValueGroup.forEach((fieldValueList) => {\n    const newFieldValueList = [] as TPlainObject[];\n    fieldValueList.forEach((item, index) => {\n      if (index === 0) {\n        newFieldValueList.push({ ...item, count: 1 });\n      } else {\n        const targetIndex = newFieldValueList.findIndex((newItem) =>\n          valueIsEqual(newItem.value as string, item.value as string)\n        );\n        if (targetIndex >= 0) {\n          newFieldValueList[targetIndex].count =\n            (newFieldValueList[targetIndex].count as number) + 1;\n        } else {\n          newFieldValueList.push({ ...item, count: 1 });\n        }\n      }\n    });\n    newDataSourceValueGroup.push(newFieldValueList);\n  });\n  const valueUseList = [] as string[];\n  newDataSource.forEach((dataSourceItem) => {\n    newDataSourceValueGroup.forEach((item) => {\n      item.forEach((fieldValueItem) => {\n        const mergeValueList = [] as TAny[];\n        fieldValueItem.fields.forEach((fieldItem) => {\n          mergeValueList.push(dataSourceItem[fieldItem]);\n        });\n        const mergeValue = mergeValueList.join('_');\n        if (valueIsEqual(mergeValue, fieldValueItem.value as string)) {\n          const lastField =\n            fieldValueItem.fields[fieldValueItem.fields.length - 1];\n          if (!valueUseList.find((temp) => valueIsEqual(temp, mergeValue))) {\n            valueUseList.push(mergeValue);\n            dataSourceItem[`${lastField}RowSpan`] = fieldValueItem.count;\n          } else {\n            dataSourceItem[`${lastField}RowSpan`] = 0;\n          }\n        }\n      });\n    });\n  });\n  // 添加序号\n  let _mergeSerialNumber = 1;\n  newDataSource.forEach((item) => {\n    const target = mergeFields[0];\n    const mergeKey = typeof target === 'string' ? target : target.mergeKey;\n    if (item[`${mergeKey}RowSpan`] > 0) {\n      item['_mergeSerialNumber'] = _mergeSerialNumber;\n      _mergeSerialNumber += 1;\n    }\n  });\n\n  const targetList: { mergeKey: string; statisticKey: string }[] = [];\n  mergeFields.forEach((item) => {\n    if (item.statisticKey) {\n      targetList.push({\n        mergeKey: item.mergeKey,\n        statisticKey: item.statisticKey,\n      });\n    }\n  });\n  if (targetList.length > 0) {\n    targetList.forEach((statisticItem) => {\n      newDataSource.forEach((item, index) => {\n        const rowSpanValue = item[`${statisticItem.mergeKey}RowSpan`] as number;\n        if (rowSpanValue && rowSpanValue > 0) {\n          item[`${statisticItem.mergeKey}RowTotal`] = newDataSource\n            .slice(index, index + rowSpanValue)\n            .reduce((total, node) => {\n              const itemTotal = node[statisticItem.statisticKey];\n              return isNumber(itemTotal)\n                ? flatbizPrice.add(total, itemTotal)\n                : total;\n            }, 0);\n        }\n      });\n    });\n  }\n\n  return newDataSource;\n};\n","import { isArray } from '@dimjs/lang';\nimport { arrayToMap } from '../array/array-to-map.js';\nimport { cloneObject } from '../object/clone-object.js';\nimport type { TPlainObject } from '../types/define.js';\n\n/**\n * 由平铺数组转为树数组\n */\nexport const tiledArrayToTree = (\n  dataList: TPlainObject[],\n  fieldNames: {\n    idKeyName: string;\n    pIdKeyName: string;\n    childrenKeyName: string;\n  },\n  // 是否为根节点（根节点可以为多个）\n  isRootNode: (dataItem: TPlainObject) => boolean\n) => {\n  if (!dataList.length) return [];\n  const dataListClone = cloneObject(dataList);\n  const rootNodeList: TPlainObject[] = [];\n  const { idKeyName, pIdKeyName, childrenKeyName } = fieldNames;\n  const dataListMap = arrayToMap(dataListClone, idKeyName);\n  dataListClone.forEach((item) => {\n    const isRootItem = isRootNode(item);\n    if (isRootItem) {\n      rootNodeList.push(item);\n      return;\n    }\n    const parent = dataListMap[item[pIdKeyName]];\n    if (parent) {\n      const parentChildren = parent[childrenKeyName];\n      if (isArray(parentChildren)) {\n        parentChildren.push(item);\n      } else {\n        parent[childrenKeyName] = [item];\n      }\n    }\n  });\n  if (!rootNodeList.length) {\n    console.warn('数据中未查询到根节点');\n    return [];\n  }\n  return rootNodeList;\n};\n","import { isArray } from '@dimjs/lang';\nimport type { TPlainObject } from '../types/define.js';\n\n/**\n * 树结构数据，复制字段数据为新字段值（配置方式）\n * ```\n * 1. changeFieldNames => { '原字段': '新字段' }，原字段与新字段同时存在\n * 2. childrenName tree结构数据children字段名称，默认值：children\n * ```\n */\nexport const treeFieldNameChange = (\n  treeList: TPlainObject[],\n  changeFieldNames: TPlainObject<string>,\n  childrenName?: string\n) => {\n  const childrenKey = childrenName || 'children';\n  const changeFieldList = Object.keys(changeFieldNames);\n  function loopHandle(dataItem) {\n    if (!dataItem) return;\n    changeFieldList.forEach((fieldKey) => {\n      dataItem[changeFieldNames[fieldKey]] = dataItem[fieldKey];\n    });\n\n    if (dataItem[childrenKey] && isArray(dataItem[childrenKey])) {\n      dataItem[childrenKey].map((node) => {\n        loopHandle(node);\n      });\n    }\n  }\n\n  treeList.forEach((dataItem) => {\n    loopHandle(dataItem);\n  });\n\n  return treeList;\n};\n\n/**\n * 树结构数据，复制字段数据为新字段值（适配器方式）\n * ```\n * 1. treeItemAdapter 适配器，可在返回值添加新字段数据\n * 2. childrenName tree结构数据children字段名称，默认值：children\n * ```\n */\nexport const treeFieldNameChangeAdapter = (\n  treeList: TPlainObject[],\n  treeItemAdapter: (treeItem: TPlainObject) => TPlainObject,\n  childrenName?: string\n) => {\n  const childrenKey = childrenName || 'children';\n  function loopHandle(dataItem) {\n    if (!dataItem) return;\n    const adapterResult = treeItemAdapter(dataItem);\n    if (adapterResult) {\n      Object.keys(adapterResult).forEach((tempKey) => {\n        dataItem[tempKey] = adapterResult[tempKey];\n      });\n    }\n\n    if (dataItem[childrenKey] && isArray(dataItem[childrenKey])) {\n      dataItem[childrenKey].map((node) => {\n        loopHandle(node);\n      });\n    }\n  }\n\n  treeList.forEach((dataItem) => {\n    loopHandle(dataItem);\n  });\n\n  return treeList;\n};\n","import type { TPlainObject } from '../types/define.js';\nimport { treeFieldNameChangeAdapter } from './tree-field-change.js';\n\n/**\n * 树结构数据递归遍历适配\n * ```\n * 1. adaptive 适配器，可在返回值添加新字段数据\n * 2. childrenName tree结构数据children字段名称，默认值：children\n * ```\n */\nexport const treeEachAdaptive = (\n  treeDataList: TPlainObject[],\n  adaptive: (data: TPlainObject) => TPlainObject,\n  childrenName?: string\n) => {\n  return treeFieldNameChangeAdapter(treeDataList, adaptive, childrenName);\n};\n","import { isUndefined } from '@dimjs/lang';\nimport { isNotEmptyArray } from '../array/is-array.js';\nimport type { TPlainObject } from '../types/index.js';\n\n/**\n * 根据规则过滤tree数据\n * @param dataList tree 数据\n * @param filter 过滤条件 返回false 移除\n * @param options 配置项\n *\n * ```\n *  options配置项目中\n * 1. options.childrenName（tree数据数组节点key字段名称）\n *    默认值：children\n * 2. options.queryParentShowChildrenAll（过滤匹配到父节点是否显示全部子节点，默认值：true）\n *    true：匹配到父节点，则显示全部子节点\n *    false：未匹配到父节点，则移除所有子节点\n * ```\n */\nexport const treeFilter = (\n  dataList: TPlainObject[],\n  filter: (node) => boolean,\n  options?: {\n    childrenName?: string;\n    /** 过滤匹配到父节点是否显示全部子节点，默认：true */\n    queryParentShowChildrenAll?: boolean;\n  }\n) => {\n  const childrenName = options?.childrenName || 'children';\n  const queryParentShowChildrenAll = isUndefined(\n    options?.queryParentShowChildrenAll\n  )\n    ? true\n    : options?.queryParentShowChildrenAll;\n\n  return dataList.reduce((acc: TPlainObject[], node) => {\n    // 检查当前节点是否满足过滤条件\n    if (filter(node)) {\n      // 如果当前节点有子节点，递归地过滤子节点数组\n      if (isNotEmptyArray(node[childrenName])) {\n        if (queryParentShowChildrenAll) {\n          acc.push(node);\n          return acc;\n        }\n        node[childrenName] = treeFilter(node[childrenName], filter, options);\n        if (!isNotEmptyArray(node[childrenName])) {\n          node[childrenName] = undefined;\n        }\n        acc.push(node);\n      } else {\n        node[childrenName] = undefined;\n        acc.push(node);\n      }\n    } else {\n      if (isNotEmptyArray(node[childrenName])) {\n        node[childrenName] = treeFilter(node[childrenName], filter, options);\n        if (isNotEmptyArray(node[childrenName])) {\n          acc.push(node);\n        } else {\n          node[childrenName] = undefined;\n        }\n      }\n    }\n    return acc;\n  }, []);\n};\n","import { isNotEmptyArray } from '../array/is-array.js';\nimport type { TPlainObject } from '../types/index.js';\n\n/**\n * 根据key值 删除 Tree数据节点以及所有子节点\n * @param key 待删除节点 key\n * @param treeList tree 数据\n * @param options tree 数据字段名称配置\n *\n */\nexport const treeItemDelete = (\n  key: string | number,\n  treeList: TPlainObject[],\n  options: { key: string; children: string }\n) => {\n  const childrenName = options.children;\n  return treeList.reduce((acc: TPlainObject[], node) => {\n    // 检查当前节点是否满足过滤条件\n    if (node[options.key] === key) {\n      // 如果当前节点有子节点，递归地过滤子节点数组\n      return acc;\n    } else {\n      if (isNotEmptyArray(node[childrenName])) {\n        node[childrenName] = treeItemDelete(key, node[childrenName], options);\n        if (!isNotEmptyArray(node[childrenName])) {\n          node[childrenName] = undefined;\n        }\n      }\n      acc.push(node);\n    }\n    return acc;\n  }, []);\n};\n\n/**\n * 通过过滤器删除树形数据中的节点\n * @param treeList 树形数据\n * @param filter 过滤器 返回true 删除节点\n * @param childrenName\n *\n */\nexport const treeItemDeleteByFilter = (\n  treeList: TPlainObject[],\n  filter: (node: TPlainObject) => boolean,\n  childrenName?: string\n) => {\n  const childrenKey = childrenName || 'children';\n  return treeList.reduce((acc: TPlainObject[], node) => {\n    if (filter(node)) {\n      return acc;\n    } else {\n      if (isNotEmptyArray(node[childrenKey])) {\n        node[childrenKey] = treeItemDeleteByFilter(\n          node[childrenKey],\n          filter,\n          childrenKey\n        );\n        if (!isNotEmptyArray(node[childrenKey])) {\n          node[childrenKey] = undefined;\n        }\n      }\n      acc.push(node);\n    }\n    return acc;\n  }, []);\n};\n","import { get } from '@dimjs/utils';\nimport { isUndefinedOrNull } from '../lang/index.js';\nimport type { TPlainObject } from '../types/index.js';\n\n/**\n * 树叶子节点的所有父节点列表\n * @deprecated 已过期，请使用 treeNodeParentsList 方法（入参中列表数据有区别，注意区分）\n * @param value 叶子节点值\n * @param treeTiledList 平铺树结构，可通过treeToArray 将tree数据转为tree平铺数据\n * @param hasSelf 返回是否包含叶子节点，默认值：false\n * @param fieldNames 字段配置，默认值 { value: 'value', parentValue: 'parentValue' }\n * ```\n * fieldNames.parentValue 可传多级，例如: 'parent.id'\n * ```\n */\nexport const treeLeafParentsArray = (\n  value: string | number,\n  treeTiledList: TPlainObject[],\n  hasSelf = false,\n  fieldNames?: { value: string; parentValue: string }\n) => {\n  const newFieldNames = {\n    value: 'value',\n    parentValue: 'parentValue',\n    ...fieldNames,\n  };\n  const tempList: TPlainObject[] = [];\n\n  function parseChildren(itemValue: string | number) {\n    const target = treeTiledList.find(\n      (temp) => temp[newFieldNames.value] === itemValue\n    );\n    if (target) {\n      tempList.push(target);\n      const parentValue = get(target, newFieldNames.parentValue);\n      if (!isUndefinedOrNull(parentValue)) {\n        parseChildren(parentValue);\n      }\n    }\n  }\n  parseChildren(value);\n  if (!hasSelf) {\n    if (tempList.length > 1) {\n      return tempList.splice(1, tempList.length - 1);\n    }\n    return [];\n  }\n  return tempList.reverse();\n};\n","import type { TPlainObject } from '../types/define.js';\n\n/**\n * 树结构数据，由嵌套结构转成平铺【键值对】\n * @param treeDataList tree对象，数据中必须要有唯一值\n * @param fieldNames.value 数组对象中的唯一值\n * @param fieldNames.children 默认值：children\n * @param insertPIdKeyName pId字段名称，设置后树结构转为平铺结构时，会添加父子链路pId\n *\n *```\n * 例如：\n * [{ id: 1, name: '张三' }, { id: 2, name: '李四', chidren: [{ id: 3, name: '李四儿子', }] }]\n * =>\n * { 1: { id: 1, name: '张三' }, 2: { id: 2, name: '李四' }, 3: { id: 3, name: '李四儿子' } }\n * ```\n */\nexport const treeToTiledMap = (\n  treeDataList: TPlainObject[],\n  fieldNames: { value: string; children: string },\n  insertPIdFieldName?: string\n) => {\n  const childrenKey = fieldNames.children;\n  const valueKey = fieldNames.value;\n  const tempListMap: TPlainObject = {};\n  function parseChildren(nodeItem, pUid?) {\n    const uid = nodeItem[valueKey];\n    tempListMap[uid] = nodeItem;\n    if (insertPIdFieldName) {\n      nodeItem[insertPIdFieldName] = pUid;\n    }\n    if (nodeItem[childrenKey]) {\n      nodeItem[childrenKey].map((childrenIrem) => {\n        parseChildren(childrenIrem, uid);\n      });\n    }\n  }\n\n  treeDataList.forEach((node) => {\n    parseChildren(node);\n  });\n  return tempListMap;\n};\n","import { cloneObject } from '../object/clone-object.js';\nimport type { TPlainObject } from '../types/index.js';\nimport { treeToTiledMap } from './tree-to-tiled-map.js';\n\n/**\n * 指定节点的所有父节点列表\n * @param value 叶子节点值\n * @param treeDataList 树结构数据\n * @param hasSelf 返回是否包含叶子节点，默认值：false\n * @param fieldNames 字段配置，默认值 { value: 'value', children: 'children' }\n * ```\n * 注意：树结构数据中节点value必须唯一不重复\n * ```\n */\nexport const treeNodeParentsList = (\n  value: string | number,\n  treeDataList: TPlainObject[],\n  hasSelf = false,\n  fieldNames?: { value: string; children: string }\n) => {\n  const valueKey = fieldNames?.value || 'value';\n  const childrenKey = fieldNames?.children || 'children';\n  const treeListFt = cloneObject(treeDataList);\n  const tempList: Array<string | number> = [];\n  const treeTiledMap = treeToTiledMap(\n    treeListFt,\n    {\n      value: valueKey,\n      children: childrenKey,\n    },\n    'pId'\n  );\n  let parentNode = treeTiledMap[value];\n  while (parentNode) {\n    const pId = parentNode.pId;\n    parentNode = treeTiledMap[pId];\n    if (parentNode) {\n      tempList.push(pId);\n    }\n  }\n  if (hasSelf) {\n    return [value, ...tempList];\n  }\n  return tempList;\n};\n","import type { TPlainObject } from '../types/define.js';\n\n/**\n * 树结构数据，由嵌套结构转成平铺结构，返回值不改变原数据命名\n * @param dataList\n * @param childrenName\n * @param insertPId pId字段设置，设置后树结构转为平铺结构时，会添加父子链路pId\n */\nexport const treeToArray = (\n  treeDataList: TPlainObject[],\n  childrenName: string,\n  /**\n   * pId字段设置，设置后树结构转为平铺结构时，会添加父子链路pId\n   * ```\n   * idName：数组元素唯一值字段名称\n   * pIdKeyName: 向数组元素中添加pId的字段名称\n   * ```\n   */\n  insertPId?: { idName: string; pIdKeyName: string }\n) => {\n  const tempList: TPlainObject[] = [];\n  function parseChildren(nodeItem, pId) {\n    tempList.push(nodeItem);\n    if (insertPId) {\n      nodeItem[insertPId.pIdKeyName] = pId;\n    }\n    const uid = insertPId?.idName ? nodeItem[insertPId.idName] : undefined;\n    if (nodeItem[childrenName]) {\n      nodeItem[childrenName].map((node) => {\n        parseChildren(node, uid);\n      });\n    }\n  }\n\n  treeDataList.forEach((node) => {\n    parseChildren(node, undefined);\n  });\n  return tempList;\n};\n","import { extend } from '@dimjs/utils';\nimport type { TAny, TPlainObject } from '../types/define.js';\nimport type { TreeTiledDataItem } from '../types/index.js';\n\n/**\n * 树结构数据，由嵌套结构转成平铺结构，返回数据格式根据fieldNames转换成 { value, label, parentValue }\n * @param dataList\n * @param fieldNames\n * @returns\n */\nexport const treeToTiledArray = (\n  dataList: TPlainObject[],\n  fieldNames?: { label?: string; value?: string; children?: string }\n) => {\n  const newFieldNames = extend(\n    {},\n    { label: 'label', value: 'value', children: 'children' },\n    fieldNames\n  );\n  const labelKey = newFieldNames.label;\n  const valueKey = newFieldNames.value;\n  const childrenKey = newFieldNames.children;\n  const tempList: Array<TreeTiledDataItem & { [key: string]: TAny }> = [];\n  function parseChildren(nodeItem, parentValue) {\n    tempList.push({\n      ...nodeItem,\n      label: nodeItem[labelKey],\n      value: nodeItem[valueKey],\n      parentValue,\n    });\n    if (nodeItem[childrenKey]) {\n      nodeItem[childrenKey].map((node) => {\n        parseChildren(node, nodeItem[valueKey]);\n      });\n    }\n  }\n\n  dataList.forEach((node) => {\n    parseChildren(node, undefined);\n  });\n\n  return tempList;\n};\n","/**\n * 字符串前后斜线，拼接和取消\n * @param str\n * @param slashFix 默认值 true\n * @returns\n * ```\n * 例如：\n * 1. ensureSlash('/abc', true) => /abc/\n * 2. ensureSlash('abc', true) => /abc/\n * 3. ensureSlash('/abc/', false) => abc\n * ```\n *\n */\nexport const ensureSlash = (str: string, slashFix = true) => {\n  str = str.replace(/\\/$/, '').replace(/^\\//, '');\n  return slashFix ? `/${str}/` : str;\n};\n","import { isArray } from '@dimjs/lang';\nimport { getQueryString, modifyQueryString } from '@dimjs/utils';\nimport { getWindow, isMockMeEnv } from '../system/index.js';\nimport type { TPlainObject } from '../types/define.js';\n\nconst userAgent = () => {\n  return navigator.userAgent.toLowerCase();\n};\n\nconst isFabricWebview = () => {\n  return new RegExp('fabric@', 'i').test(userAgent());\n};\n\n/**\n * 向path中拼接query数据，内部项目使用\n * ```\n * 1.默认query值\n *  1). env 非生产环境有效\n *  2). fabric-callback-key【webview通信key值】\n *  3). accessToken【env=me环境下有效】\n *  4). 业务流程参数 window.bizProcessUrlParam 配置的key值\n * 2.query中undefined会被过滤\n * ```\n */\nexport const toLinkPath = (path: string, query: TPlainObject = {}) => {\n  const newQauery = { ...query, ntv_indicator: '1' } as TPlainObject;\n  const env = getQueryString('env');\n  if (env && env !== 'prod') {\n    newQauery.env = env;\n  }\n\n  const media = getQueryString('media');\n  if (media) {\n    newQauery.media = media;\n  }\n\n  if (window['ntv_indicator'] === false || !isFabricWebview()) {\n    newQauery.ntv_indicator = undefined;\n  }\n\n  // 业务流程参数\n  const bizProcessUrlParam = getWindow<string[]>('bizProcessUrlParam');\n  if (isArray(bizProcessUrlParam) && bizProcessUrlParam.length > 0) {\n    bizProcessUrlParam.forEach((paramKey) => {\n      const keyValue = getQueryString(paramKey);\n      if (keyValue) {\n        newQauery[paramKey] = keyValue;\n      }\n    });\n  }\n\n  const fabricCallbackKey = getQueryString('fabric-callback-key') || '';\n  if (fabricCallbackKey) {\n    newQauery['fabric-callback-key'] = fabricCallbackKey;\n  }\n\n  const accessToken = getQueryString('accessToken') || '';\n  if (accessToken && isMockMeEnv()) {\n    newQauery.accessToken = accessToken;\n  }\n  // 将query中的值为 undefined 过滤了\n  const filterQuery = {} as TPlainObject;\n  Object.keys(newQauery).filter((key) => {\n    if (newQauery[key] !== undefined && newQauery[key] !== null) {\n      filterQuery[key] = newQauery[key];\n    }\n  });\n  return modifyQueryString(path, filterQuery);\n};\n","export const urlJoin = (first: string, second: string) => {\n  return (\n    (first || '').replace(/\\/$/, '') + '/' + (second || '').replace(/^\\//, '')\n  );\n};\n\n/**\n * url片段拼接\n * @param first\n * @param second\n * @returns\n */\nexport const urlJoinMulti = (firstUrl: string, ...fragment: string[]) => {\n  let str = firstUrl;\n  fragment.forEach((item) => {\n    str = urlJoin(str, item);\n  });\n  return str;\n};\n","import { getGlobalData } from '../system/window.js';\nimport type { TPlainObject } from '../types/define.js';\nimport { toLinkPath } from './to-link-path.js';\nimport { urlJoin } from './url-join.js';\n\n/**\n * 获取指定项目模块地址\n * @param module\n */\nexport const getModuleUrl = (module: string, query: TPlainObject = {}) => {\n  const global = getGlobalData<{ routeBaseName: string; hostUrl: string }>();\n  const routeBaseName: string = global.routeBaseName;\n  const hostUrl: string = global.hostUrl;\n  const urlBase = urlJoin(hostUrl, routeBaseName);\n  return toLinkPath(urlJoin(urlBase, module), query);\n};\n","export const isHttpUri = (uri: string): boolean => {\n  return !uri\n    ? false\n    : uri.startsWith('//') || new RegExp('(https|http)?://').test(uri);\n};\n","import { ensureSlash } from './ensure-slash.js';\n\n/**\n * 比较两个path是否相等\n * @param targetPath 目标path\n * @param comparedPath 被比较path\n * @returns\n */\nexport const pathEqual = (targetPath: string, comparedPath: string) => {\n  return (\n    ensureSlash(targetPath || '', true) ===\n    ensureSlash(comparedPath || '', true)\n  );\n};\n\n/**\n * 比较comparedPath是否包含targetPath\n * @param targetPath 目标path\n * @param comparedPath 被比较path\n * @returns\n */\nexport const pathEqualInclude = (targetPath: string, comparedPath: string) => {\n  return (\n    ensureSlash(comparedPath || '', true).indexOf(\n      ensureSlash(targetPath || '', true)\n    ) >= 0\n  );\n};\n","import { isString } from '@dimjs/lang';\nimport { isUndefinedOrNull } from '../lang/is-empty.js';\n\n/**\n * 移除字符串前后斜线\n * @param str\n * @param position\n * @returns\n * ```\n * 例如：\n * 1. removeSlash('/abc', 'before') => abc\n * 2. removeSlash('/abc/', 'after') => /abc\n * 3. removeSlash('/abc/', 'before-after') => abc\n * ```\n *\n */\nexport const removeSlash = (\n  str: string,\n  position: 'before' | 'after' | 'before-after'\n) => {\n  if (!isString(str) || isUndefinedOrNull(str)) return '';\n  if (position === 'before' || position === 'before-after') {\n    if (str.startsWith('/')) {\n      str = str.substring(1);\n    }\n  }\n  if (position === 'after' || position === 'before-after') {\n    if (str.endsWith('/')) {\n      str = str.substring(0, str.length - 1);\n    }\n  }\n  return str;\n};\n","import { isHttpUrl } from '@dimjs/utils';\n\n/**\n * 根据当前地址协议，获取完整的url地址\n * ```\n * 例如\n * //xxx.com => https://xxx.com\n * ```\n */\nexport const toFullPath = (url: string) => {\n  if (isHttpUrl(url)) {\n    if (url.startsWith('//')) {\n      return `${location.protocol}${url}`;\n    }\n  }\n  return url;\n};\n","import { modifyQueryString, paramStrToJson } from '@dimjs/utils';\nimport type { TPlainObject } from '../types/define.js';\n\nexport const toLinkPathWithQuery = (path: string, query: TPlainObject = {}) => {\n  return modifyQueryString(\n    path,\n    Object.assign(paramStrToJson(window.location.href), query)\n  );\n};\n","import { uriParse } from '@dimjs/utils';\nimport { getGlobalData } from '../system/index.js';\nimport { ensureSlash } from './ensure-slash.js';\nimport { isHttpUri } from './is-http-url.js';\n\nexport const getUrlRoute = (url: string) => {\n  if (!isHttpUri(url)) return url;\n  const pathname = uriParse(url || '').pathname || '';\n  const { routeBaseName } = getGlobalData<{ routeBaseName: string }>();\n  const route = ensureSlash(pathname, true).replace(\n    ensureSlash(routeBaseName, true),\n    ''\n  );\n  return `/${ensureSlash(route, false)}`;\n};\n","import { dateFormat } from '../date/format.js';\n\nexport const is18IdCard = (sId: string) => {\n  if (!/^\\d{17}(\\d|X|x)$/.test(sId)) {\n    console.log(`[${sId}]:你输入的身份证长度或格式错误`);\n    return false;\n  }\n  //身份证城市\n  const aCity = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外',\n  };\n  if (!aCity[parseInt(sId.substring(0, 2))]) {\n    console.log(`[${sId}]:你的身份证地区非法`);\n    return false;\n  }\n\n  const sBirthday = `${sId.substring(6, 10)}/${sId.substring(10, 12)}/${sId.substring(12, 14)}`;\n\n  const d = new Date(sBirthday);\n  if (sBirthday != dateFormat(d, 'YYYY/MM/DD')) {\n    console.log(`[${sId}]:身份证上的出生日期非法`);\n    return false;\n  }\n\n  // 身份证号码校验\n  let sum = 0;\n  const weights = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];\n  const codes = '10X98765432';\n  for (let i = 0; i < sId.length - 1; i++) {\n    sum += (sId[i] as unknown as number) * weights[i];\n  }\n  const last = codes[sum % 11]; //计算出来的最后一位身份证号码\n  if (sId[sId.length - 1] != last) {\n    console.log(`[${sId}]:你输入的身份证号非法`);\n    return false;\n  }\n\n  return true;\n};\n","export const flatbizRegExp = {\n  /** 汉字格式  */\n  chineseCharactersRegExp: /[\\u4e00-\\u9fa5]/,\n  /** 手机号格式  */\n  mobileRegExp: /^1[0-9]{10}$/,\n  /** 正整数格式 */\n  integerRegExp: /^[0-9]*$/,\n  /** 金额格式  */\n  amountRegExp: /^(([1-9]\\d*)|0)(\\.\\d{1,})?$/,\n  /** 密码格式：英文大小写、数字、符号[!@#$%^&*?.]其中两种及以上，长度8-20位 */\n  passwordRegExp:\n    /^.*(?=.{8,20})((?=.*\\d)(?=.*[A-Z]))|((?=.*\\d)(?=.*[a-z]))|((?=.*\\d)(?=.*[!@#$%^&*?.]))|((?=.*[A-Z])(?=.*[a-z]))|((?=.*[A-Z])(?=.*[!@#$%^&*?.]))|((?=.*[a-z])(?=.*[!@#$%^&*?.])).*$/,\n  /** 8-20位数字和字母的组合 */\n  passwordRegExp2: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,20}$/,\n};\n"],"names":["isUndefinedOrNull","value","undefined","arrayField2LabelValue","dataList","fieldNames","isReserve","dataListNew","fieldNamesNew","_extend","label","isReserveNew","map","item","respData","arrayFilter","targetValue","fieldName","filter","arrayFilterByLoosely","arrayFind","find","arrayFindByLoosely","arrayFindIndex","findIndex","arrayFindIndexByLoosely","arrayMax","array","fieldKey","max","forEach","itemValue","_isPlainObject","_isNumber","arrayMin","min","arrayPick","result","target","concat","arrayPickByLoosely","arrayReorder","sourceIndex","targetIndex","Array","from","length","console","warn","removed","splice","arraysReorder","arrays","source","sourceItems","parentIndex","sourceTarget","index","sourceItemsNew","_arrayRemove","targetItems","newOverItems","slice","cloneObject","obj","JSON","parse","stringify","uuidFactory","now","Date","_cache","substring","getUuid","arraySetUid","options","uidFieldNameFt","uidFieldName","arrayFt","returnNewArray","arraySplit","newArray","push","arrayToMap","uidName","arrayTotal","total","generateIntArray","to","i","isNotEmptyArray","_isArray","isEmptyArray","listInList","sourceList","targetList","inRuleFieldName","resultList","sourceItem","arrayRandomSort","sort","Math","random","toArray","twoArrayElementPositionChange","sourceArray","targetArray","dateNormalize","dateInput","Error","String","_dateNormalize","dateTimeGte","date1","date2","date1Fmt","date2Fmt","getTime","dateTimeGt","dateTimeEq","dateTimeIn","targetDate","minDate","maxDate","weekConfig","dateDetail","dateInstance","week","getDay","type7Week","y","getFullYear","m","getMonth","d","getDate","h","getHours","mi","getMinutes","s","getSeconds","ms","getMilliseconds","weekString","instance","dateNew","mode","number","_dateNew","isDate","_error","dateFormat","format","_dateFormat","flatbizDate","gte","gt","eq","detail","update","in","findParentsElement","originNode","verify","parentNode","overflowScrollReg","defaultRoot","window","isElement","node","ELEMENT_NODE_TYPE","tagName","nodeType","getScrollNode","el","root","overflowY","getComputedStyle","test","bodyAppendDivElement","id","div","document","createElement","idNew","setAttribute","body","append","divElement","elementId","createDivElement","removeBodyChild","element","removeChild","querySelector","dom","base64ToFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","type","fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","base64","onerror","error","imageCompressToBase64","imageFile","optionsNew","quality","ratio","threshold","suffix","name","lastIndexOf","imageName","imageSuffix","base64Suffix","toLocaleLowerCase","isLegal","includes","then","imgBase64","needCompress","info","fileMb","size","imgage","Image","src","that","width","height","canvas","ctx","getContext","drawImage","toDataURL","catch","imageCompressToFormData","formDataKey","at","formData","FormData","compressInfo","bytes","blob","Blob","imageCompressToFile","noop","isNumber","num","isNaN","Number","enumValues","enumeration","keys","Object","k","mapToListExact","mapData","valueList","labelName","valueName","colorMap","tempList","color","mapToList","list","key","objectGetObject","objectData","keyList","temp","targetKey","beforeKey","resultKey","afterKey","objectKeys","prototype","defineProperty","enumerable","configurable","writable","trunc","is","x","polyfill","log","add","amt","amt2","option","_price","precision","subtract","multiply","divide","priceFen2wan","defaultValue","priceFen2yuan","priceFormat","separator","symbol","priceRemoveTailZero","priceFt","parseFloat","firstValue","priceSplit","priceWan2fen","priceYuan2fen","flatbizPrice","fen2yuan","fen2wan","yuan2fen","wan2fen","removeTailZero","attachPropertiesToComponent","component","properties","ret","hasOwnProperty","call","composeProps","originProps","patchProps","isMerge","isMergeNew","_isUndefined","composedProps","func","args","sleep","time","setTimeout","trim","str","cancelGlobal","_isString","patt","replace","getStrByteLen","c","subStringByBytes","len","cutString","flow","cutStr","stringFormat","newValue","accumulation","preValue","currentValue","strArray","getValueOrDefault","jsonStringToJsonObject","jsonString","jsonValue","count","eval","message","valueIsEqual","secondValue","newFirst","newSecond","xmlValidate","xmlContent","errorCode","errorMessage","xmlDoc","async","loadXML","parseError","reason","line","implementation","parser","DOMParser","parseFromString","getElementsByTagName","documentElement","nodeName","childNodes","nodeValue","innerHTML","storageKey","localStorageCache","set","localStorage","setItem","get","getItem","remove","removeItem","sessionStorageCache","sessionStorage","isMockMeEnv","env","_getQueryString","isMockDevEnv","isMacEnv","navigator","userAgent","isWindowsEnv","toLowerCase","isIphone","isMac","isIphoneOrMac","isAndroid","isFabricWebview","ua","isFabric","RegExp","isDisallowFabric","getGlobalData","getWindow","setWindow","data","openNewWindow","url","aElement","click","tableMergeCellCalculate","dataSource","mergeFields","pagination","pageNo","pageSize","mergeFieldsGroup","mergeKey","theSameSort","originalData","fieldList","newOriginalData","fieldValueList","originalItem","originalValue","join","newFieldValueList","Set","filedValue","newDataSource","fields","dataSourceValueGroup","fieldsGroupItem","dataSourceItem","mergeValue","fieldItem","newDataSourceValueGroup","newItem","valueUseList","fieldValueItem","mergeValueList","lastField","_mergeSerialNumber","statisticKey","statisticItem","rowSpanValue","reduce","itemTotal","tiledArrayToTree","isRootNode","dataListClone","rootNodeList","idKeyName","pIdKeyName","childrenKeyName","dataListMap","isRootItem","parent","parentChildren","treeFieldNameChange","treeList","changeFieldNames","childrenName","childrenKey","changeFieldList","loopHandle","dataItem","treeFieldNameChangeAdapter","treeItemAdapter","adapterResult","tempKey","treeEachAdaptive","treeDataList","adaptive","treeFilter","queryParentShowChildrenAll","acc","treeItemDelete","children","treeItemDeleteByFilter","treeLeafParentsArray","treeTiledList","hasSelf","newFieldNames","parentValue","parseChildren","_get","reverse","treeToTiledMap","insertPIdFieldName","valueKey","tempListMap","nodeItem","pUid","uid","childrenIrem","treeNodeParentsList","treeListFt","treeTiledMap","pId","treeToArray","insertPId","idName","treeToTiledArray","labelKey","ensureSlash","slashFix","toLinkPath","path","query","newQauery","ntv_indicator","media","bizProcessUrlParam","paramKey","keyValue","fabricCallbackKey","accessToken","filterQuery","_modifyQueryString","urlJoin","first","second","urlJoinMulti","firstUrl","fragment","getModuleUrl","module","global","routeBaseName","hostUrl","urlBase","isHttpUri","uri","startsWith","pathEqual","targetPath","comparedPath","pathEqualInclude","indexOf","removeSlash","position","endsWith","toFullPath","_isHttpUrl","location","protocol","toLinkPathWithQuery","assign","_paramStrToJson","href","getUrlRoute","pathname","_uriParse","route","is18IdCard","sId","aCity","parseInt","sBirthday","sum","weights","codes","last","flatbizRegExp","chineseCharactersRegExp","mobileRegExp","integerRegExp","amountRegExp","passwordRegExp","passwordRegExp2"],"mappings":"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"}