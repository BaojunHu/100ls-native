{"version":3,"file":"is-number.js","sources":["@dimjs/lang/src/is-number.ts"],"sourcesContent":["import { isObjectLike } from './is-object-like.js';\nimport { type } from './type.js';\n\n/**\n * @description\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * @example\n * ``` ts\n * isNumber(123);\n * // => true\n * isNumber(NaN);\n * // => true\n * isNumber(Number.MIN_VALUE);\n * // => true\n * isNumber('123');\n * // => false\n * ```\n *\n * @note\n * To exclude Infinity, -Infinity, and NaN, which are classified as numbers\n *\n * @param value The value to check.\n * @returns Returns true if value is a number, else false.\n *\n * @docsCategory preference/lang\n * @codeFilter is-number\n */\nexport const isNumber = (value): value is number => {\n  return (\n    type(value) === 'number' ||\n    (isObjectLike(value) &&\n      Object.prototype.toString.call(value) == '[object Number]')\n  );\n};\n"],"names":["isNumber","value","type","isObjectLike","Object","prototype","toString","call"],"mappings":";yIA4BaA,EAAW,SAAXA,EAAYC,GACvB,OACEC,EAAKD,KAAW,UACfE,EAAaF,IACZG,OAAOC,UAAUC,SAASC,KAAKN,IAAU,iBAE/C"}