{"version":3,"file":"is-deep-equal.js","sources":["@dimjs/lang/src/is-deep-equal.ts"],"sourcesContent":["import { isArray } from './is-array.js';\n\n/**\n * @description\n * Deep comparison of two variables a and b, returning whether they are equal according to a recursive equality algorithm.\n *\n * @example\n * ``` ts\n * isDeepEqual({ a: [2, 3], b: [4] }, { a: [2, 3], b: [4] });\n * // => true\n * isDeepEqual([null, null, null], [null, null, null]);\n * // => true\n * isDeepEqual([{ a: 3 }, { b: 4 }], [{ a: '3' }, { b: '4' }]);\n * // => false\n * isDeepEqual(NaN, 'abc');\n * // => false\n * ```\n *\n * @param a The a to check.\n * @param b The b to check.\n * @returns Returns true if value is a equal, else false.\n *\n * @docsCategory preference/lang\n * @codeFilter is-deep-equal\n */\nexport function isDeepEqual(a, b): boolean {\n  if (a === b) return true;\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    const arrA = isArray(a);\n    const arrB = isArray(b);\n    let i;\n    let length;\n    let key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (i = length; i-- !== 0; ) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    if (arrA !== arrB) {\n      return false;\n    }\n\n    const dateA = a instanceof Date;\n    const dateB = b instanceof Date;\n    if (dateA !== dateB) return false;\n    if (dateA && dateB) return a.getTime() === b.getTime();\n\n    const regexpA = a instanceof RegExp;\n    const regexpB = b instanceof RegExp;\n    if (regexpA !== regexpB) return false;\n    if (regexpA && regexpB) return a.toString() === b.toString();\n\n    const keys = Object.keys(a);\n    length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (i = length; i-- !== 0; ) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (i = length; i-- !== 0; ) {\n      key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n"],"names":["isDeepEqual","a","b","_typeof","arrA","isArray","arrB","i","length","key","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","keys","Object","prototype","hasOwnProperty","call"],"mappings":";+HAyBO,SAASA,EAAYC,EAAGC,GAC7B,GAAID,IAAMC,EAAG,OAAO,KACpB,GAAID,GAAKC,GAAKC,EAAOF,KAAM,UAAYE,EAAOD,KAAM,SAAU,CAC5D,IAAME,EAAOC,EAAQJ,GACrB,IAAMK,EAAOD,EAAQH,GACrB,IAAIK,EACJ,IAAIC,EACJ,IAAIC,EAEJ,GAAIL,GAAQE,EAAM,CAChBE,EAASP,EAAEO,OACX,GAAIA,IAAWN,EAAEM,OAAQ,CACvB,OAAO,KACT,CACA,IAAKD,EAAIC,EAAQD,MAAQ,GAAK,CAC5B,IAAKP,EAAYC,EAAEM,GAAIL,EAAEK,IAAK,CAC5B,OAAO,KACT,CACF,CACA,OAAO,IACT,CAEA,GAAIH,IAASE,EAAM,CACjB,OAAO,KACT,CAEA,IAAMI,EAAQT,aAAaU,KAC3B,IAAMC,EAAQV,aAAaS,KAC3B,GAAID,IAAUE,EAAO,OAAO,MAC5B,GAAIF,GAASE,EAAO,OAAOX,EAAEY,YAAcX,EAAEW,UAE7C,IAAMC,EAAUb,aAAac,OAC7B,IAAMC,EAAUd,aAAaa,OAC7B,GAAID,IAAYE,EAAS,OAAO,MAChC,GAAIF,GAAWE,EAAS,OAAOf,EAAEgB,aAAef,EAAEe,WAElD,IAAMC,EAAOC,OAAOD,KAAKjB,GACzBO,EAASU,EAAKV,OAEd,GAAIA,IAAWW,OAAOD,KAAKhB,GAAGM,OAAQ,CACpC,OAAO,KACT,CACA,IAAKD,EAAIC,EAAQD,MAAQ,GAAK,CAC5B,IAAKY,OAAOC,UAAUC,eAAeC,KAAKpB,EAAGgB,EAAKX,IAAK,CACrD,OAAO,KACT,CACF,CACA,IAAKA,EAAIC,EAAQD,MAAQ,GAAK,CAC5BE,EAAMS,EAAKX,GACX,IAAKP,EAAYC,EAAEQ,GAAMP,EAAEO,IAAO,CAChC,OAAO,KACT,CACF,CACA,OAAO,IACT,CACA,OAAOR,IAAMA,GAAKC,IAAMA,CAC1B"}