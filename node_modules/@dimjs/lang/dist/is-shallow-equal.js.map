{"version":3,"file":"is-shallow-equal.js","sources":["@dimjs/lang/src/is-shallow-equal.ts"],"sourcesContent":["/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n *\n * @param x - The first value to compare.\n * @param y - The second value to compare.\n *\n * @docsCategory preference/lang\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * @description\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n *\n * @example\n * ``` ts\n * isShallowEqual([1, 2, 3], [1, 2, 3]);\n * // => true\n * isShallowEqual({ a: 5, b: {} }, { a: 5, b: {} });\n * // => false\n * ```\n *\n * @param objA - The first object to compare.\n * @param objB - The second object to compare.\n * @returns Returns true when the values of all keys are strictly equal.\n *\n * @docsCategory preference/lang\n * @codeFilter is-shallow-equal\n *\n */\nexport function isShallowEqual(objA, objB): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !Object.prototype.hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"names":["is","x","y","isShallowEqual","objA","objB","_typeof","keysA","Object","keys","keysB","length","i","prototype","hasOwnProperty","call"],"mappings":";4DASA,SAASA,EAAGC,EAAGC,GAEb,GAAID,IAAMC,EAAG,CAIX,OAAOD,IAAM,GAAKC,IAAM,GAAK,EAAID,IAAM,EAAIC,CAC7C,KAAO,CAEL,OAAOD,IAAMA,GAAKC,IAAMA,CAC1B,CACF,CAuBO,SAASC,EAAeC,EAAMC,GACnC,GAAIL,EAAGI,EAAMC,GAAO,CAClB,OAAO,IACT,CAEA,GACEC,EAAOF,KAAS,UAChBA,IAAS,MACTE,EAAOD,KAAS,UAChBA,IAAS,KACT,CACA,OAAO,KACT,CAEA,IAAME,EAAQC,OAAOC,KAAKL,GAC1B,IAAMM,EAAQF,OAAOC,KAAKJ,GAE1B,GAAIE,EAAMI,SAAWD,EAAMC,OAAQ,CACjC,OAAO,KACT,CAGA,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAMI,OAAQC,IAAK,CACrC,IACGJ,OAAOK,UAAUC,eAAeC,KAAKV,EAAME,EAAMK,MACjDZ,EAAGI,EAAKG,EAAMK,IAAKP,EAAKE,EAAMK,KAC/B,CACA,OAAO,KACT,CACF,CAEA,OAAO,IACT"}