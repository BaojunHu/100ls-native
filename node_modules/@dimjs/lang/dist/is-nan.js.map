{"version":3,"file":"is-nan.js","sources":["@dimjs/lang/src/is-nan.ts"],"sourcesContent":["import { isNumber } from './is-number.js';\n\n/**\n * @description\n * Checks if `value` is `NaN`.\n *\n * @example\n * ``` ts\n * isNaN(NaN);\n * // => true\n * isNaN(new Number(NaN));\n * // => true\n * isNaN(undefined);\n * // => false\n * isNaN('1111');\n * // => false\n * ```\n *\n * @note\n * This method is based on Number.isNaN and is not the same as global isNaN which returns true for undefined and other non-number values.\n *\n *\n * @param value The value to check.\n * @returns Returns `true` if value is `NaN`, else `false`.\n *\n * @docsCategory preference/lang\n * @codeFilter is-nan\n */\nexport const isNaN = (value): value is File => {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return isNumber(value) && value != +value;\n};\n"],"names":["isNaN","value","isNumber"],"mappings":";qJA4BaA,EAAQ,SAARA,EAASC,GAIpB,OAAOC,EAASD,IAAUA,IAAUA,CACtC"}