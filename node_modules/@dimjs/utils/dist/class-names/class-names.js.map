{"version":3,"file":"class-names.js","sources":["@dimjs/utils/src/class-names/class-names.ts"],"sourcesContent":["/**\n * @docsCategory preference/utils/class-names\n * @docsPage types-class-names\n */\nexport type ClassValue =\n  | string\n  | number\n  | undefined\n  | null\n  | boolean\n  | Record<string, unknown>\n  | ClassArray;\n\n/**\n * @docsCategory preference/utils/class-names\n * @docsPage types-class-names\n */\nexport type ClassArray = Array<ClassValue>;\n\n/**\n * @docsCategory preference/utils/class-names\n * @docsPage types-class-names\n */\nexport interface ClassNamesFn {\n  (...classes: ClassValue[]): string;\n}\n\n/**\n * @description\n * Concatenates and returns a string of CSS class names.\n *\n * @example\n * ``` ts\n * classNames('', 'b', {}, '');\n * // => 'b'\n * classNames(['a', 'b'], ['c', 'd']);\n * // => 'a b c d'\n * ```\n *\n * @param args - The class names to be concatenated.\n * @returns A string of concatenated class names.\n *\n * @docsCategory preference/utils/class-names\n * @codeFilter class-names\n */\nexport const classNames: ClassNamesFn = (...args: ClassValue[]) => {\n  const classes: ClassValue[] = [];\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (!arg) continue;\n    if (typeof arg === 'string' || typeof arg === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg)) {\n      if (arg.length) {\n        const inner = classNames(...arg);\n        if (inner) {\n          classes.push(inner);\n        }\n      }\n    } else if (typeof arg === 'object') {\n      if (arg.toString !== Object.prototype.toString) {\n        classes.push(arg.toString());\n      } else {\n        for (const key in arg) {\n          if (Object.prototype.hasOwnProperty.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n  }\n  return classes.join(' ');\n};\n"],"names":["classNames","classes","i","arguments","length","arg","undefined","push","Array","isArray","inner","apply","_toConsumableArray","_typeof","toString","Object","prototype","key","hasOwnProperty","call","join"],"mappings":";oEA6CO,IAAMA,EAA2B,SAA3BA,IACX,IAAMC,EAAwB,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAKC,OAAQF,IAAK,CACpC,IAAMG,EAAWH,EAAC,GAAAC,UAAAC,QAADF,EAACI,UAAAH,UAADD,GACjB,IAAKG,EAAK,SACV,UAAWA,IAAQ,iBAAmBA,IAAQ,SAAU,CACtDJ,EAAQM,KAAKF,EACd,MAAM,GAAIG,MAAMC,QAAQJ,GAAM,CAC7B,GAAIA,EAAID,OAAQ,CACd,IAAMM,EAAQV,EAAUW,WAAAC,EAAAA,EAAIP,IAC5B,GAAIK,EAAO,CACTT,EAAQM,KAAKG,EACf,CACF,CACD,MAAM,GAAIG,EAAOR,KAAQ,SAAU,CAClC,GAAIA,EAAIS,WAAaC,OAAOC,UAAUF,SAAU,CAC9Cb,EAAQM,KAAKF,EAAIS,WACnB,KAAO,CACL,IAAK,IAAMG,KAAOZ,EAAK,CACrB,GAAIU,OAAOC,UAAUE,eAAeC,KAAKd,EAAKY,IAAQZ,EAAIY,GAAM,CAC9DhB,EAAQM,KAAKU,EACf,CACF,CACF,CACF,CACF,CACA,OAAOhB,EAAQmB,KAAK,IACtB"}