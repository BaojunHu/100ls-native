{"version":3,"file":"filter-tree.js","sources":["@dimjs/utils/src/tree/filter-tree.ts"],"sourcesContent":["import { CHILDREN_KEY } from './constant.js';\nimport {\n  type ArrayPropertyKey,\n  type TreeNode,\n  type TreeNodeItem,\n} from './types.js';\n\n/**\n * @docsCategory preference/utils/tree\n * @codeFilter tree-filter\n * @docsPage filter-tree\n */\nconst own = {}.hasOwnProperty;\n\n/**\n * @description\n * Create a new tree consisting of copies of all nodes that pass test.\n * The tree is walked in preorder (NLR), visiting the node itself, then its head, etc.\n *\n * @param tree tree Tree to filter\n * @param test the test function predicate\n * @param options Whether to drop parent nodes if they had children, but all their children were filtered out.\n * @returns Promise\\<TreeNode\\<T\\> | null\\>\n *\n * @docsCategory preference/utils/tree\n * @codeFilter tree-filter\n * @docsPage filter-tree\n */\nexport function filterTree<\n  Node extends TreeNodeItem,\n  Key extends ArrayPropertyKey<Node>,\n>(\n  tree: TreeNode<Node, Key>,\n  test: (\n    node: TreeNode<Node, Key>,\n    index?: number,\n    parent?: TreeNode<Node, Key>,\n    level?: number\n  ) => Promise<boolean>,\n  options: { cascade: boolean; childrenKey?: Key } = { cascade: false }\n): Promise<TreeNode<Node, Key> | null> {\n  return preorder(tree);\n\n  /**\n   * @param {Node} node\n   * @param {number|undefined} [index]\n   * @param {Parent|undefined} [parent]\n   * @param {number|undefined} [level]\n   * @returns {Node|null}\n   */\n  async function preorder(\n    node: TreeNode<Node, Key>,\n    index?: number,\n    parent?: TreeNode<Node, Key>,\n    level = 0\n  ): Promise<TreeNode<Node, Key> | null> {\n    const children: Node[] = [];\n    let result: Node | null;\n    let key: string;\n    let childIndex: number;\n    const childrenKey = options.childrenKey ?? CHILDREN_KEY;\n    const testResult = await test(node, index, parent, level);\n    if (!testResult) return null;\n\n    if (node[childrenKey]) {\n      childIndex = -1;\n      level++;\n      // Looks like a parent.\n      while (++childIndex < node[childrenKey].length) {\n        // Looks like a parent.\n        result = await preorder(\n          node[childrenKey][childIndex],\n          childIndex,\n          node,\n          level\n        );\n\n        if (result) {\n          children.push(result);\n        }\n      }\n\n      // Looks like a parent.\n      if (options.cascade && node[childrenKey].length && !children.length)\n        return null;\n    }\n\n    // Create a shallow clone, using the new children.\n    // all the fields will be copied over.\n    const next = {};\n\n    for (key in node) {\n      /* istanbul ignore else - Prototype injection. */\n      if (own.call(node, key)) {\n        next[key] = key === childrenKey ? children : node[key];\n      }\n    }\n\n    return next as TreeNode<Node, Key>;\n  }\n}\n"],"names":["own","hasOwnProperty","filterTree","tree","test","options","arguments","length","undefined","cascade","preorder","node","index","parent","$args","Promise","$return","$error","_options$childrenKey","level","children","result","key","childIndex","childrenKey","testResult","next","CHILDREN_KEY","resolve","then","$await_4","$Loop_2_trampoline","$Loop_2","$await_5","push","$boundEx","q","pop","$Loop_2_exit","call","this","_exception","bind","$If_1"],"mappings":";6CAYA,IAAMA,EAAM,CAAE,EAACC,eAgBR,SAASC,EAIdC,EACAC,GAOqC,IADrCC,EAAgDC,UAAAC,OAAAD,GAAAA,UAAAE,KAAAA,UAAAF,UAAG,GAAA,CAAEG,QAAS,OAE9D,OAAOC,EAASP,GAShB,SAAeO,EACbC,EACAC,EACAC,GArDJ,IAAIC,EAAKR,UAkDP,OAAA,IAAAS,SAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAMQC,EACFC,EACAC,EACAC,EACEC,EACAC,EA4BAC,EAnCNP,EAAKL,EAAAP,OAAA,GAAAO,EAAA,KAAAN,UAAAM,EAAA,GAAG,EAEFM,EAAmB,GAInBI,GAAWN,EAAGb,EAAQmB,eAAW,MAAAN,WAAAA,EAAIS,EACxB,OAAAZ,QAAAa,QAAMxB,EAAKO,EAAMC,EAAOC,EAAQM,IAAhCU,KA7DvB,SAAAC,GAAA,IA6DUL,EAAaK,EACnB,IAAKL,EAAY,OAAAT,EAAO,MAExB,GAAIL,EAAKa,GAAc,CACrBD,GAAc,EACdJ,IACA,IAAAY,EAAA,SAAAC,IAAA,KACST,EAAaZ,EAAKa,GAAajB,OAAM,CAEnC,OAAAQ,QAAAa,QAAMlB,EACbC,EAAKa,GAAaD,GAClBA,EACAZ,EACAQ,IAJOU,MAKR,SAAAI,GA3ET,IAsEQZ,EAASY,EAOT,GAAIZ,EAAQ,CACVD,EAASc,KAAKb,EAChB,CA/ER,OAAAW,CAAS,CAAC,MAAAG,GAAW,OAAOlB,EAAAkB,EAAM,CAAC,GAAAlB,EA2E1B,MAAA,MAAA,CAAA,EAAA,CAAA,OA3ERc,EAAiB,SAAUK,GAAsB,MAAOA,EAAG,CAAW,GAAIA,EAAEP,KAAoB,YAAYO,EAAEP,KAAIE,EAAAd,GAAiC,IAAmB,GAAImB,EAAEC,IAAG,CAAoB,GAAID,EAAE7B,OAA0B,OAAO6B,EAAEC,MAAQC,EAAgBC,KAAKC,MAAQJ,OAAwCA,EAACJ,CAAW,MAAsCI,EAAIA,EAAEG,KAAKC,KAAiB,CAAC,MAAOC,GAA2B,OAAOxB,EAAMwB,EAAuB,CAAO,CAAE,EAAGC,KAAKF,OAAKR,GAAU,SAAAM,IAmFze,GAAIjC,EAAQI,SAAWE,EAAKa,GAAajB,SAAWa,EAASb,OAC3D,OAAAS,EAAO,MAAK,OApFpB2B,EAAGJ,KAAIC,KAAI,CAqFP,CAGA,SAAAG,IACMjB,EAAO,CAAE,EAEf,IAAKJ,KAAOX,EAAM,CAEhB,GAAIX,EAAIuC,KAAK5B,EAAMW,GAAM,CACvBI,EAAKJ,GAAOA,IAAQE,EAAcJ,EAAWT,EAAKW,EACpD,CACF,CAEA,OAAAN,EAAOU,EAA4B,CAAA,OAlGvCiB,EAAGJ,KAAIC,KAAE,CAAC,MAAAL,GAAW,OAAOlB,EAAAkB,EAAM,CAAC,EAAhCO,KAAKF,MAAKvB,EA6DgD,GAsC1D,CACH"}