/*! @flatjs/forge MIT @dimjs/utils */
import{a as r}from"../_rollupPluginBabelHelpers-BbctETlH.js";import{CHILDREN_KEY as e}from"./constant.js";var n=function e(n){return!Array.isArray(n)&&r(n)==="object"};var t=function r(i,a,o){var f;var u=null;var p=o.modifier;var d=o.parentId;var l=(f=o.childrenKey)!==null&&f!==void 0?f:e;if(Array.isArray(i)){for(var v=0;v<i.length;v++){u=t(i[v],a,{modifier:p,parentId:d,childrenKey:l});if(u){break}}}if(n(i)){var c=p(i,d);if(a(c)){return c}if(c[l]&&c[l].length){u=t(c[l],a,{modifier:p,parentId:c.id,childrenKey:l})}}return u};function i(r,e,n){var i=[];var a=function r(e,n){if(n){e.parentId=n}i.push(e);return e};var o={modifier:a,childrenKey:n};var f=t(r,e,o);return{result:f,path:i}}function a(r,e){var n=[];if(!r.length||!e){return n}n.push(e);while(e.parentId){var t=void 0;for(var i=0;i<r.length;i++){var a=r[i];if(a.id!==e.parentId){continue}e=t=a;n.push(e)}if(!t){break}}return n}function o(e,n,t){if(!Array.isArray(e)){throw new TypeError("Expected an array but got "+r(e))}if(typeof n!=="function"){throw new TypeError("Expected a function but got "+r(n))}var o=i(e,n,t);return a(o.path,o.result)}export{o as findAncestors};
//# sourceMappingURL=find-ancestors.js.map
