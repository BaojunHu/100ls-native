/*! @flatjs/forge MIT @dimjs/utils */
import{e as r,c as a,f as n}from"../_rollupPluginBabelHelpers-BbctETlH.js";import{CHILDREN_KEY as e}from"./constant.js";function i(r,a){var n=new Map;var i=a!==null&&a!==void 0?a:e;function l(r){n.set(r.id,r);r[i].forEach(l)}if(r){l(r)}return n}function l(l,v,d){var o;var t=[];var f={};var u=d!==null&&d!==void 0?d:e;var s=i(v,u);var p=r(l),c;try{for(p.s();!(c=p.n()).done;){var h=c.value;f[h.id]=a(a({},h),{},n({},u,[]))}}catch(r){p.e(r)}finally{p.f()}var m=r(l.map((function(r){return r.id}))),y;try{for(m.s();!(y=m.n()).done;){var g=y.value;if(f.hasOwnProperty(g)){var x,j;var w=f[g];w.expanded=(x=(j=s.get(g))===null||j===void 0?void 0:j.expanded)!==null&&x!==void 0?x:false;var P=w.parent;var b=!P||!f[P.id];if(b){t.push(w)}else if(P){if(f[P.id]){f[P.id][u].push(w)}else{f[P.id]=n({},u,[w])}}}}}catch(r){m.e(r)}finally{m.f()}var B=t.length?(o=t[0].parent)===null||o===void 0?void 0:o.id:undefined;return n({id:B},u,t)}export{l as arrayToTree};
//# sourceMappingURL=array-to-tree.js.map
