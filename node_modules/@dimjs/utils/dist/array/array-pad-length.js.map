{"version":3,"file":"array-pad-length.js","sources":["@dimjs/utils/src/array/array-pad-length.ts"],"sourcesContent":["import { isArray } from '@dimjs/lang';\n\n/**\n * @description\n * Returns an array with a specified length by padding, left-padding and right-padding\n *\n * @example\n * ``` ts\n * const one = arrayPadLength([1, 2, 3], -5, 0);\n * one.join('.')\n * // => '0.0.1.2.3'\n * const three = arrayPadLength(two, 7, 9);\n * three.join('.')\n * // => '1.2.3.0.0.9.9'\n * ```\n *\n * @param array array\n * @param length Specifies the number of values to the left or right pad `-5` | `5` sign `-` indicates direction 'left'\n * @param value A placeholder of filling\n *\n * @docsCategory preference/utils/array\n * @codeFilter array-pad-length\n */\nexport const arrayPadLength = <T>(\n  array: T[],\n  length: number,\n  value?: T\n): T[] => {\n  if (!isArray(array)) {\n    throw new TypeError('must be an array');\n  }\n  const method = length < 0 ? 'unshift' : 'push';\n  const total = Math.abs(length);\n\n  if (typeof length !== 'number' || total % 1 !== 0) {\n    throw new TypeError('length must be an integer');\n  }\n  while (array.length < total) {\n    array[method](value as T);\n  }\n  return array;\n};\n"],"names":["arrayPadLength","array","length","value","_isArray","TypeError","method","total","Math","abs"],"mappings":";uDAuBO,IAAMA,EAAiB,SAAjBA,EACXC,EACAC,EACAC,GAEA,IAAKC,EAAQH,GAAQ,CACnB,MAAM,IAAII,UAAU,mBACtB,CACA,IAAMC,EAASJ,EAAS,EAAI,UAAY,OACxC,IAAMK,EAAQC,KAAKC,IAAIP,GAEvB,UAAWA,IAAW,UAAYK,EAAQ,IAAM,EAAG,CACjD,MAAM,IAAIF,UAAU,4BACtB,CACA,MAAOJ,EAAMC,OAASK,EAAO,CAC3BN,EAAMK,GAAQH,EAChB,CACA,OAAOF,CACT"}