{"version":3,"file":"pick.js","sources":["@dimjs/utils/src/pick/pick.ts"],"sourcesContent":["import { isObject } from '@dimjs/lang';\n\n/**\n * @description\n * Creates a new object with the specified properties from the given object.\n *\n * @param obj - The object from which to pick properties.\n * @param keys - The properties to pick. Can be a string or an array of strings.\n * @returns A new object with the picked properties.\n *\n * @docsCategory preference/utils/pick\n * @codeFilter pick\n */\nexport const pick = <T extends object, TKeys extends keyof T>(\n  obj: T,\n  keys: TKeys[] | TKeys\n): Pick<T, TKeys> => {\n  if (!isObject(obj) && typeof obj !== 'function') {\n    return {} as Pick<T, TKeys>;\n  }\n\n  let _keys: TKeys[];\n\n  if (Array.isArray(keys)) {\n    _keys = keys;\n  } else {\n    _keys = [keys];\n  }\n\n  return _keys.reduce(\n    (acc, key) => {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) acc[key] = obj[key];\n      return acc;\n    },\n    {} as Pick<T, TKeys>\n  );\n};\n"],"names":["pick","obj","keys","_isObject","_keys","Array","isArray","reduce","acc","key","Object","prototype","hasOwnProperty","call"],"mappings":";yDAaO,IAAMA,EAAO,SAAPA,EACXC,EACAC,GAEA,IAAKC,EAASF,WAAeA,IAAQ,WAAY,CAC/C,MAAO,CAAE,CACX,CAEA,IAAIG,EAEJ,GAAIC,MAAMC,QAAQJ,GAAO,CACvBE,EAAQF,CACV,KAAO,CACLE,EAAQ,CAACF,EACX,CAEA,OAAOE,EAAMG,QACX,SAACC,EAAKC,GACJ,GAAIC,OAAOC,UAAUC,eAAeC,KAAKZ,EAAKQ,GAAMD,EAAIC,GAAOR,EAAIQ,GACnE,OAAOD,CACR,GACD,GAEJ"}