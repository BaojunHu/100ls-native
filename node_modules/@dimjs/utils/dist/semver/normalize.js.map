{"version":3,"file":"normalize.js","sources":["@dimjs/utils/src/semver/normalize.ts"],"sourcesContent":["import { arrayPadLength } from '../array/array-pad-length.js';\nimport { verRegex } from './constant.js';\nimport { clean } from './utils.js';\nimport { validate } from './validate.js';\n\n/**\n * @description\n *\n * Returns the formatted version string displayed on the client, with the version number major.min.patch always remaining three digits\n *\n * @param ver version string\n *\n * @docsCategory preference/utils/semver\n * @docsPage semver-normalize\n * @codeFilter normalize\n */\nexport const normalize = (ver: string): string => {\n  if (validate(ver)) {\n    const verStr = clean(ver).join('.');\n    const matchResult = ver.match(verRegex) || [];\n    return matchResult.length ? verStr + matchResult[0] : verStr;\n  }\n  const tryVer = ver.replace(/[^\\d.]/g, '').replace(/\\.+/g, '.');\n  const arr = tryVer\n    .split('.')\n    .slice(0, 3)\n    .filter((s) => !!s);\n  const newVer = arrayPadLength(arr, 3, '0').join('.');\n  if (validate(newVer)) {\n    return normalize(newVer);\n  }\n  return '';\n};\n"],"names":["normalize","ver","validate","verStr","clean","join","matchResult","match","verRegex","length","tryVer","replace","arr","split","slice","filter","s","newVer","arrayPadLength"],"mappings":";oQAgBO,IAAMA,EAAY,SAAZA,EAAaC,GACxB,GAAIC,EAASD,GAAM,CACjB,IAAME,EAASC,EAAMH,GAAKI,KAAK,KAC/B,IAAMC,EAAcL,EAAIM,MAAMC,IAAa,GAC3C,OAAOF,EAAYG,OAASN,EAASG,EAAY,GAAKH,CACxD,CACA,IAAMO,EAAST,EAAIU,QAAQ,UAAW,IAAIA,QAAQ,OAAQ,KAC1D,IAAMC,EAAMF,EACTG,MAAM,KACNC,MAAM,EAAG,GACTC,QAAO,SAACC,GAAC,QAAOA,KACnB,IAAMC,EAASC,EAAeN,EAAK,EAAG,KAAKP,KAAK,KAChD,GAAIH,EAASe,GAAS,CACpB,OAAOjB,EAAUiB,EACnB,CACA,MAAO,EACT"}