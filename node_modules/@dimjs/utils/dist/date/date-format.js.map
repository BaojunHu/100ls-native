{"version":3,"file":"date-format.js","sources":["@dimjs/utils/src/date/date-format.ts"],"sourcesContent":["import { appendzero, dateNormalize } from './date-normalize.js';\n\n/**\n * @description\n * - YYYY:4位年,如1993\n * - YY:2位年,如93; MM:月份; DD:日期; hh:小时; mm:分钟; ss:秒钟\n * - 星期:星期, 返回如 星期二; 周:返回如 周二\n * - week:英文星期全称, 返回如 Saturday\n * - www:三位英文星期, 返回如 Sat\n *\n * @example\n * ``` ts\n * dateFormat(new Date('january 01,2012'));\n * // => 2012-01-01 00:00:00\n * ```\n *\n * @param  date The Date instance(optional)\n * @param  format Date format string. default is `YYYY-MM-DD hh:mm:ss`\n * @return Formatted string.\n *\n * @docsCategory preference/utils/date\n * @codeFilter date-format\n */\nexport const dateFormat = (\n  dateInput: Date | string | number,\n  format = 'YYYY-MM-DD hh:mm:ss'\n): string => {\n  if (!dateInput) {\n    return '';\n  }\n  let normalizedDate: Date;\n  try {\n    normalizedDate = dateNormalize(dateInput);\n  } catch (err) {\n    return (err as Error).message as string;\n  }\n  const week = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    '日',\n    '一',\n    '二',\n    '三',\n    '四',\n    '五',\n    '六',\n  ];\n\n  return format.replace(/YYYY|YY|MM|M|DD|hh|mm|ss|星期|周|www|week/g, (a) => {\n    let replaced = '';\n    switch (a) {\n      case 'YYYY':\n        replaced = String(normalizedDate.getFullYear());\n        break;\n      case 'YY':\n        replaced = String(normalizedDate.getFullYear()).slice(2);\n        break;\n      case 'MM':\n        replaced = appendzero(normalizedDate.getMonth() + 1);\n        break;\n      case 'M':\n        replaced = String(normalizedDate.getMonth() + 1);\n        break;\n      case 'DD':\n        replaced = appendzero(normalizedDate.getDate());\n        break;\n      case 'hh':\n        replaced = appendzero(normalizedDate.getHours());\n        break;\n      case 'mm':\n        replaced = appendzero(normalizedDate.getMinutes());\n        break;\n      case 'ss':\n        replaced = appendzero(normalizedDate.getSeconds());\n        break;\n      case '星期':\n        replaced = '星期' + week[normalizedDate.getDay() + 7];\n        break;\n\n      case '周':\n        replaced = '周' + week[normalizedDate.getDay() + 7];\n        break;\n      case 'week':\n        replaced = week[normalizedDate.getDay()];\n        break;\n      case 'www':\n        replaced = week[normalizedDate.getDay()].slice(0, 3);\n        break;\n      default:\n        replaced = '';\n        break;\n    }\n    return replaced;\n  });\n};\n"],"names":["dateFormat","dateInput","format","arguments","length","undefined","normalizedDate","dateNormalize","err","message","week","replace","a","replaced","String","getFullYear","slice","appendzero","getMonth","getDate","getHours","getMinutes","getSeconds","getDay"],"mappings":";wEAuBaA,EAAa,SAAbA,EACXC,GAEW,IADXC,EAAMC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAG,sBAET,IAAKF,EAAW,CACd,MAAO,EACT,CACA,IAAIK,EACJ,IACEA,EAAiBC,EAAcN,EAChC,CAAC,MAAOO,GACP,OAAQA,EAAcC,OACxB,CACA,IAAMC,EAAO,CACX,SACA,SACA,UACA,YACA,WACA,SACA,WACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGF,OAAOR,EAAOS,QAAQ,2CAA2C,SAACC,GAChE,IAAIC,EAAW,GACf,OAAQD,GACN,IAAK,OACHC,EAAWC,OAAOR,EAAeS,eACjC,MACF,IAAK,KACHF,EAAWC,OAAOR,EAAeS,eAAeC,MAAM,GACtD,MACF,IAAK,KACHH,EAAWI,EAAWX,EAAeY,WAAa,GAClD,MACF,IAAK,IACHL,EAAWC,OAAOR,EAAeY,WAAa,GAC9C,MACF,IAAK,KACHL,EAAWI,EAAWX,EAAea,WACrC,MACF,IAAK,KACHN,EAAWI,EAAWX,EAAec,YACrC,MACF,IAAK,KACHP,EAAWI,EAAWX,EAAee,cACrC,MACF,IAAK,KACHR,EAAWI,EAAWX,EAAegB,cACrC,MACF,IAAK,KACHT,EAAW,KAAOH,EAAKJ,EAAeiB,SAAW,GACjD,MAEF,IAAK,IACHV,EAAW,IAAMH,EAAKJ,EAAeiB,SAAW,GAChD,MACF,IAAK,OACHV,EAAWH,EAAKJ,EAAeiB,UAC/B,MACF,IAAK,MACHV,EAAWH,EAAKJ,EAAeiB,UAAUP,MAAM,EAAG,GAClD,MACF,QACEH,EAAW,GACX,MAEJ,OAAOA,CACT,GACF"}