{"version":3,"file":"date-normalize.js","sources":["@dimjs/utils/src/date/date-normalize.ts"],"sourcesContent":["/**\n * @description\n * Normalizes a date value to a Date object.\n * - If no date value is provided, the current date and time will be used.\n * - If the date value is a string, it will be converted to a Date object.\n * - If the date value is already a Date object, it will be returned as is.\n * - Throws an error if the resulting date is invalid.\n *\n * @param date - The date value to normalize. Defaults to the current date and time.\n * @returns The normalized Date object.\n * @throws Error if the resulting date is invalid.\n *\n * @docsCategory preference/utils/date\n */\nexport const dateNormalize = (\n  date: string | number | Date = new Date()\n): Date => {\n  let final;\n  if (typeof date === 'string') {\n    // IOS format fix. '2016-11-11' 需要转换成2016/11/11\n    final = new Date(date.replace(/-/g, '/'));\n  } else {\n    final = new Date(date);\n  }\n  if (final.toString() === 'Invalid Date') {\n    throw new Error(`Invalid Date : \"${String(date)}\"`);\n  }\n  return final as Date;\n};\n\n/**\n * Appends a zero to a number if it is less than 10.\n *\n * @param obj - The number to append zero to.\n * @returns The number with zero appended as a string.\n *\n * @docsCategory preference/utils/date\n * @docsPage types-date-normalize\n */\nexport const appendzero = (obj: number): string => {\n  if (obj < 10) {\n    return `0${obj}`;\n  } else {\n    return String(obj);\n  }\n};\n"],"names":["dateNormalize","date","arguments","length","undefined","Date","final","replace","toString","Error","concat","String","appendzero","obj"],"mappings":";IAcaA,EAAgB,SAAhBA,IAEF,IADTC,EAA4BC,UAAAC,OAAAD,GAAAA,UAAAE,KAAAA,UAAAF,UAAA,GAAG,IAAIG,KAEnC,IAAIC,EACJ,UAAWL,IAAS,SAAU,CAE5BK,EAAQ,IAAID,KAAKJ,EAAKM,QAAQ,KAAM,KACtC,KAAO,CACLD,EAAQ,IAAID,KAAKJ,EACnB,CACA,GAAIK,EAAME,aAAe,eAAgB,CACvC,MAAM,IAAIC,MAAK,mBAAAC,OAAoBC,OAAOV,GAAK,KACjD,CACA,OAAOK,CACT,MAWaM,EAAa,SAAbA,EAAcC,GACzB,GAAIA,EAAM,GAAI,CACZ,MAAAH,IAAAA,OAAWG,EACb,KAAO,CACL,OAAOF,OAAOE,EAChB,CACF"}