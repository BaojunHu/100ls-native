/**
 * @description
 * - YYYY:4位年,如1993
 * - YY:2位年,如93; MM:月份; DD:日期; hh:小时; mm:分钟; ss:秒钟
 * - 星期:星期, 返回如 星期二; 周:返回如 周二
 * - week:英文星期全称, 返回如 Saturday
 * - www:三位英文星期, 返回如 Sat
 *
 * @example
 * ``` ts
 * dateFormat(new Date('january 01,2012'));
 * // => 2012-01-01 00:00:00
 * ```
 *
 * @param  date The Date instance(optional)
 * @param  format Date format string. default is `YYYY-MM-DD hh:mm:ss`
 * @return Formatted string.
 *
 * @docsCategory preference/utils/date
 * @codeFilter date-format
 */
export declare const dateFormat: (dateInput: Date | string | number, format?: string) => string;
/**
 * @description
 * Date addition to gives a new value
 *
 * @example
 * ``` ts
 * dateFormat(dateNew('2017-9-25', 'd', 5), 'YYYY-MM-DD');
 * // => 2017-09-30
 * ```
 *
 * @param startDate Original time object.
 * @param newMode A date string expression that represents the time interval to add.
 * @param newNum Date numeric expression that represents the number of time intervals to add or substract, can be positive and negative
 * @return New time object.
 *
 * @docsCategory preference/utils/date
 * @codeFilter date-new
 */
export declare const dateNew: (startDate: Date | string | number, newMode: "y" | "q" | "m" | "w" | "d" | "h" | "mi" | "s", newNum: number) => Date;
/**
 * @description
 * Normalizes a date value to a Date object.
 * - If no date value is provided, the current date and time will be used.
 * - If the date value is a string, it will be converted to a Date object.
 * - If the date value is already a Date object, it will be returned as is.
 * - Throws an error if the resulting date is invalid.
 *
 * @param date - The date value to normalize. Defaults to the current date and time.
 * @returns The normalized Date object.
 * @throws Error if the resulting date is invalid.
 *
 * @docsCategory preference/utils/date
 */
export declare const dateNormalize: (date?: string | number | Date) => Date;
/**
 * @description
 * Calculate how much time is left
 *
 * @note
 * format(hh时mm分ss秒)is required.
 *
 * @example
 * ``` ts
 * timeRemaining(10000, 'YYYY-MM-DD hh:mm:ss秒', '剩余');
 * // => 剩余10秒
 * timeRemaining(3600000, 'YYYY-MM-DD hh:mm:ss秒', '剩余');
 * // => 剩余1:00:00秒
 * ```
 *
 * @param currTime 20000 left the timestrap
 * @param format YYYY年MM月DD日 hh时mm分ss秒
 * @param prefix `剩余`
 * @returns 剩余23时58分
 *
 * @docsCategory preference/utils/date
 * @codeFilter time-remaining
 */
export declare const timeRemaining: (currTime: number, format?: string, prefix?: string) => string;

export {};
