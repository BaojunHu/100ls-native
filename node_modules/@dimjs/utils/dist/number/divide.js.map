{"version":3,"file":"divide.js","sources":["@dimjs/utils/src/number/divide.ts"],"sourcesContent":["import { digitLength } from './digit-length.js';\nimport { checkBoundary } from './enable-boundary-checking.js';\nimport { float2Fixed } from './float2-fixed.js';\nimport { strip } from './strip.js';\nimport { times } from './times.js';\nimport { type NumType } from './types.js';\n\n/**\n * @description\n * Divides two numbers and returns the result.\n * If additional numbers are provided, it performs a series of divisions.\n *\n *\n * @param num1 The first number to divide.\n * @param num2 The second number to divide.\n * @param others Additional numbers to divide.\n * @returns The result of the division.\n *\n * @docsCategory preference/utils/number\n * @codeFilter divide\n */\nexport const divide = (\n  num1: NumType,\n  num2: NumType,\n  ...others: NumType[]\n): number => {\n  if (others.length > 0) {\n    return divide(divide(num1, num2), others[0], ...others.slice(1));\n  }\n  const num1Changed = float2Fixed(num1);\n  const num2Changed = float2Fixed(num2);\n  checkBoundary(num1Changed);\n  checkBoundary(num2Changed);\n  // fix: e.g. 10 ** -4 为 0.00009999999999999999，strip fix\n  return times(\n    num1Changed / num2Changed,\n    strip(Math.pow(10, digitLength(num2) - digitLength(num1)))\n  );\n};\n"],"names":["divide","num1","num2","_len","arguments","length","others","Array","_key","apply","concat","_toConsumableArray","slice","num1Changed","float2Fixed","num2Changed","checkBoundary","times","strip","Math","pow","digitLength"],"mappings":";iSAqBaA,IAAAA,EAAS,SAATA,EACXC,EACAC,GAEW,IAAAC,IAAAA,EAAAC,UAAAC,OADRC,MAAMC,MAAAJ,EAAAA,EAAAA,OAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAA,CAANF,EAAME,EAAAJ,GAAAA,UAAAI,EAAA,CAET,GAAIF,EAAOD,OAAS,EAAG,CACrB,OAAOL,EAAMS,WAACT,EAAAA,CAAAA,EAAOC,EAAMC,GAAOI,EAAO,IAAEI,OAAAC,EAAKL,EAAOM,MAAM,KAC/D,CACA,IAAMC,EAAcC,EAAYb,GAChC,IAAMc,EAAcD,EAAYZ,GAChCc,EAAcH,GACdG,EAAcD,GAEd,OAAOE,EACLJ,EAAcE,EACdG,EAAMC,KAAKC,IAAI,GAAIC,EAAYnB,GAAQmB,EAAYpB,KAEvD"}