{"version":3,"file":"uri-parse.js","sources":["@dimjs/utils/src/uri/uri-parse.ts"],"sourcesContent":["/**\n * @description\n * Parse a URL to discover it's components, Note the url must be with prefix `https://` or `http://`\n * Please don't use `//` prefix of uri.\n *\n *\n * @param {String} url The URL to be parsed\n * @returns {Object}\n *\n * @docsCategory preference/utils/uri\n * @codeFilter uri-parse\n */\nexport function uriParse(url: string) {\n  const reURLInformation = new RegExp(\n    [\n      '^(https?:)//', // protocol\n      '(([^:/?#]*)(?::([0-9]+))?)', // host (hostname and port)\n      '(/{0,1}[^?#]*)', // pathname\n      '(\\\\?[^#]*|)', // search\n      '(#.*|)$', // hash\n    ].join('')\n  );\n  const match = reURLInformation.exec(url);\n  return match\n    ? {\n        href: url,\n        protocol: match[1],\n        host: match[2],\n        hostname: match[3],\n        port: match[4],\n        pathname: match[5],\n        search: match[6],\n        hash: match[7],\n      }\n    : {};\n}\n"],"names":["uriParse","url","reURLInformation","RegExp","join","match","exec","href","protocol","host","hostname","port","pathname","search","hash"],"mappings":";AAYO,SAASA,EAASC,GACvB,IAAMC,EAAmB,IAAIC,OAC3B,CACE,eACA,6BACA,iBACA,cACA,WACAC,KAAK,KAET,IAAMC,EAAQH,EAAiBI,KAAKL,GACpC,OAAOI,EACH,CACEE,KAAMN,EACNO,SAAUH,EAAM,GAChBI,KAAMJ,EAAM,GACZK,SAAUL,EAAM,GAChBM,KAAMN,EAAM,GACZO,SAAUP,EAAM,GAChBQ,OAAQR,EAAM,GACdS,KAAMT,EAAM,IAEd,CAAE,CACR"}