{"version":3,"file":"to-query-string.js","sources":["@dimjs/utils/src/uri/to-query-string.ts"],"sourcesContent":["import { isNull, isUndefined } from '@dimjs/lang';\n\n/**\n * @description\n * Converts an object of parameters into a query string.\n *\n * @param params - The object containing the parameters.\n * @returns The query string representation of the parameters.\n *\n * @docsCategory preference/utils/uri\n * @codeFilter to-query-string\n */\nexport const toQueryString = (params: object) => {\n  const parts: string[] = [];\n  for (const p in params) {\n    const paramValue = params[p];\n    if (isUndefined(paramValue) || isNull(paramValue)) {\n      parts.push(encodeURIComponent(p) + '=');\n    } else {\n      parts.push(encodeURIComponent(p) + '=' + encodeURIComponent(paramValue));\n    }\n  }\n  return parts.join('&');\n};\n"],"names":["toQueryString","params","parts","p","paramValue","_isUndefined","_isNull","push","encodeURIComponent","join"],"mappings":";wHAYaA,EAAgB,SAAhBA,EAAiBC,GAC5B,IAAMC,EAAkB,GACxB,IAAK,IAAMC,KAAKF,EAAQ,CACtB,IAAMG,EAAaH,EAAOE,GAC1B,GAAIE,EAAYD,IAAeE,EAAOF,GAAa,CACjDF,EAAMK,KAAKC,mBAAmBL,GAAK,IACrC,KAAO,CACLD,EAAMK,KAAKC,mBAAmBL,GAAK,IAAMK,mBAAmBJ,GAC9D,CACF,CACA,OAAOF,EAAMO,KAAK,IACpB"}