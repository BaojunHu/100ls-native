{"version":3,"file":"params-clean.js","sources":["@dimjs/utils/src/uri/params-clean.ts"],"sourcesContent":["import { isArray, isNull, isObject, isUndefined } from '@dimjs/lang';\nimport { removePropertiesBy } from '../remove-properties-by/remove-properties-by.js';\n\n/**\n * @description\n * Processes the given value recursively and returns a new value with cleaned parameters.\n *\n * @param value - The value to be processed.\n * @returns The processed value.\n *\n * @docsCategory preference/utils/uri\n * @docsPage params-clean\n */\nconst processValue = (value): unknown => {\n  // handle array\n  if (isArray(value)) {\n    const newValue: unknown[] = [];\n    for (let i = 0; i < value.length; i++) {\n      if (!isObject(value[i])) {\n        newValue.push(String(value[i]));\n        continue;\n      }\n      newValue.push(processValue(value[i]));\n    }\n    // 此处不能排序,URL字符串如果是数组必须遵守顺序, 因为服务器端取值只能按照索引, 不建议URL使用array\n    return newValue;\n  }\n\n  // handle object.\n  for (const key in value) {\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      const val = value[key];\n      if (isUndefined(val) || isNull(val)) {\n        // assign undefined\n        value[key] = undefined;\n        continue;\n      }\n      if (!isObject(val)) {\n        value[key] = String(val);\n        continue;\n      }\n      value[key] = processValue(val);\n    }\n  }\n  return value;\n};\n\n/**\n * @description\n * Normally for MD5(GET) signature, we need to remove `undefined`, `null`.\n * And convert all property value into `String` type. And sort `Array` property with alpha\n *\n * @example\n * ```ts\n * {\n *   foo: 'bar',\n *    // undefined will be removed.\n *    bar: undefined,\n *    // null will be removed.\n *    door: null,\n *    fex: '',\n *    fex2: ' ',\n *    child: {\n *      name: undefined,\n *      pwd: null,\n *      sex: 1,\n *      others: [3, 1, true, undefined],\n *    },\n *    array: ['name', '3', '1', true, null, undefined],\n *  }\n * // =>\n * {\n *    foo: 'bar',\n *    fex: '',\n *    fex2: ' ',\n *    child: {\n *      sex: '1',\n *      others: ['3', '1', 'true', 'undefined'],\n *    },\n *    array: ['name', '3', '1', true, null, undefined],\n * }\n * ```\n *\n * @param reqQuery - The request query object.\n * @returns The cleaned request query object.\n *\n * @docsCategory preference/utils/uri\n * @codeFilter params-clean.spec.ts\n */\nexport const paramsClean = (reqQuery: Record<string, unknown>) => {\n  if (!isObject(reqQuery)) {\n    return reqQuery;\n  }\n  const result = processValue({ ...reqQuery });\n  return removePropertiesBy(result, (val) => isUndefined(val));\n};\n"],"names":["processValue","value","_isArray","newValue","i","length","_isObject","push","String","key","Object","prototype","hasOwnProperty","call","val","_isUndefined","_isNull","undefined","paramsClean","reqQuery","result","_objectSpread","removePropertiesBy"],"mappings":";kaAaA,IAAMA,EAAe,SAAfA,EAAgBC,GAEpB,GAAIC,EAAQD,GAAQ,CAClB,IAAME,EAAsB,GAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAAK,CACrC,IAAKE,EAASL,EAAMG,IAAK,CACvBD,EAASI,KAAKC,OAAOP,EAAMG,KAC3B,QACF,CACAD,EAASI,KAAKP,EAAaC,EAAMG,IACnC,CAEA,OAAOD,CACT,CAGA,IAAK,IAAMM,KAAOR,EAAO,CACvB,GAAIS,OAAOC,UAAUC,eAAeC,KAAKZ,EAAOQ,GAAM,CACpD,IAAMK,EAAMb,EAAMQ,GAClB,GAAIM,EAAYD,IAAQE,EAAOF,GAAM,CAEnCb,EAAMQ,GAAOQ,UACb,QACF,CACA,IAAKX,EAASQ,GAAM,CAClBb,EAAMQ,GAAOD,OAAOM,GACpB,QACF,CACAb,EAAMQ,GAAOT,EAAac,EAC5B,CACF,CACA,OAAOb,CACT,MA4CaiB,EAAc,SAAdA,EAAeC,GAC1B,IAAKb,EAASa,GAAW,CACvB,OAAOA,CACT,CACA,IAAMC,EAASpB,EAAYqB,EAAMF,CAAAA,EAAAA,IACjC,OAAOG,EAAmBF,GAAQ,SAACN,GAAG,OAAKC,EAAYD,KACzD"}