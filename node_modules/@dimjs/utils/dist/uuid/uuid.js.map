{"version":3,"file":"uuid.js","sources":["@dimjs/utils/src/uuid/uuid.ts"],"sourcesContent":["/**\n * @description\n * A function that returns a universally unique identifier (uuid).\n * Note: If used in long period data storage it is best to add a time stamp (e.g. logging)\n *\n * @example\n * ``` ts\n * uuid();\n * // => 1b83fd69-abe7-468c-bea1-306a8aa1c81d\n * ```\n *\n * @returns `string` : 32 character uuid (see example)\n *\n * @docsCategory preference/utils/uuid\n * @codeFilter uuid\n */\nexport const uuid = () => {\n  const hashTable = [\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n  ];\n  const uuid: string[] = [];\n  for (let i = 0; i < 36; i++) {\n    if (i === 8 || i === 13 || i === 18 || i === 23) {\n      uuid[i] = '-';\n    } else {\n      uuid[i] = hashTable[Math.ceil(Math.random() * hashTable.length - 1)];\n    }\n  }\n  return uuid.join('');\n};\n"],"names":["uuid","hashTable","i","Math","ceil","random","length","join"],"mappings":";IAgBaA,EAAO,SAAPA,IACX,IAAMC,EAAY,CAChB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEF,IAAMD,EAAiB,GACvB,IAAK,IAAIE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,GAAIA,IAAM,GAAKA,IAAM,IAAMA,IAAM,IAAMA,IAAM,GAAI,CAC/CF,EAAKE,GAAK,GACZ,KAAO,CACLF,EAAKE,GAAKD,EAAUE,KAAKC,KAAKD,KAAKE,SAAWJ,EAAUK,OAAS,GACnE,CACF,CACA,OAAON,EAAKO,KAAK,GACnB"}